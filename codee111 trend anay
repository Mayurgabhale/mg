know desing thie more atractive 
ok Details — Evidence this i want desplay in center 
and add photo border with multiple colors, 
and crate this more atracitve wiht.. 
carefully, dont change any othre logic, just update desing UI ok 
    /* ---------- Evidence modal ---------- */
    .modal {
      position: fixed;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      background: rgba(3, 6, 23, 0.45);
    }

    /* FIXED modal size requested by user */
    .modal-inner {
      width: 1000px;
      height: 640px;
      max-width: 96%;
      max-height: 92%;
      overflow: hidden;
      background: #fff;
      border-radius: 10px;
      padding: 0;
      box-shadow: 0 30px 60px rgba(2, 6, 23, 0.45);
      border: 1px solid #e6edf3;
      display: flex;
      flex-direction: column;
    }

    .modal-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 14px 18px;
      border-radius: 8px 8px 0 0;
      background: linear-gradient(90deg, var(--wu-yellow), #ffd966);
      color: #080808;
    }

    .modal-header h3 {
      margin: 0;
      color: #000;
      font-size: 18px;
      letter-spacing: 0.2px;
    }

    .close-btn {
      background: #ef4444;
      color: #fff;
      border-radius: 8px;
      padding: 8px 12px;
      border: 0;
      cursor: pointer;
      font-weight: 700;
      margin-left: 12px;
    }

    /* body inside modal scrolls; header remains fixed */
    .modal-body {
      padding: 18px;
      overflow: auto;
      flex: 1;
    }

    /* top area card */
    .modal-top {
      display: grid;
      grid-template-columns: 220px 1fr 360px;
      gap: 14px;
      align-items: start;
      background: linear-gradient(180deg, #ffffff, #fbfdff);
      padding: 14px;
      border-radius: 8px;
      box-shadow: 0 6px 20px rgba(10, 20, 40, 0.03);
      border: 1px solid #eef3f8;
    }

    /* employee photo styling — square, full-fit for clear image */
    .modal-image {
      width: 250px;
      height: 270px;
      object-fit: cover;
      /* ensures the image fully fills and is cropped nicely */
      border-radius: 2px;
      /* square corners with slight rounding */
      border: 0px solid #fff;
      /* inner white ring for separation */
      box-shadow: 0 6px 22px rgba(2, 6, 23, 0.12);
      display: block;
      image-rendering: auto;
      /* keep smoothing for photos */
    }

    /* yellow outer ring wrapper adapted for square */
    .image-wrap {
      width: 250px;
      height: 270px;
      border-radius: 0px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(180deg, rgba(255, 212, 66, 0.98), rgba(255, 212, 66, 0.85));
      padding: 0px;
      /* outer ring */
      box-sizing: content-box;
    }

    .modal-image-placeholder {
      width: 250px;
      height: 270px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #64748b;
      background: #f3f4f6;
      border-radius: 1px;
      border: 1px dashed #e6edf3;
      font-weight: 600;
    }

    /* details column — smaller, tighter typography */
    .modal-details {
      padding: 6px 4px;
    }

    .emp-name {
      font-size: 16px;
      /* reduced from 20 */
      font-weight: 700;
      color: #0f172a;
      margin-bottom: 6px;
    }

    .emp-meta {
      display: flex;
      flex-direction: column;
      gap: 6px;
      color: #12263b;
      font-weight: 600;
      font-size: 13px;
      /* slightly smaller */
    }

    .meta-row {
      display: flex;
      gap: 8px;
      align-items: center;
    }

    .meta-label {
      min-width: 100px;
      color: var(--muted);
      font-weight: 700;
      font-size: 13px;
    }

    .meta-value {
      color: #0b1720;
      font-weight: 700;
      font-size: 13px;
    }

    /* reasons/why column compact + scrollable but hide scrollbar */
    .modal-reasons {
      padding: 6px;
      border-radius: 8px;
      background: linear-gradient(180deg, #fbfdff, #f8fafc);
      border: 1px solid #eef3f8;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .reasons-title {
      font-weight: 700;
      margin-bottom: 6px;
      color: #0f172a;
      font-size: 14px;
    }

    .reasons-list {
      display: flex;
      flex-wrap: wrap;
      gap: 6px;
      max-height: 72px;
      /* compact area for chips */
      overflow: auto;
      padding-right: 6px;
      font-size: 12px;
    }

    .why-box {
      margin-top: 0;
      background: linear-gradient(180deg, #fff, #fff);
      padding: 8px;
      border-radius: 8px;
      border-left: 4px solid var(--wu-yellow);
      box-shadow: 0 6px 18px rgba(2, 6, 23, 0.03);
      max-height: 140px;
      /* reduced height */
      overflow: auto;
      padding-right: 8px;
      font-size: 13px;
      line-height: 1.25;
    }

    .why-item {
      margin-bottom: 8px;
    }

    .why-item b {
      display: block;
      font-weight: 700;
      margin-bottom: 4px;
      color: #0b1720;
      font-size: 13px;
    }

    .why-item .small {
      color: #475569;
      font-weight: 600;
      font-size: 12px;
    }

    /* hide scrollbars for reasons and why-box (cross-browser) */
    .reasons-list,
    .why-box {
      -ms-overflow-style: none;
      /* IE/Edge */
      scrollbar-width: none;
      /* Firefox */
    }

    .reasons-list::-webkit-scrollbar,
    .why-box::-webkit-scrollbar {
      display: none;
      width: 0;
      height: 0;
    }

    /* small tweak: slightly smaller chips for compact layout */
    .pill,
    .chip {
      line-height: 1;
    }

    /* responsive adjustments */
    @media (max-width: 1100px) {
      .modal-top {
        grid-template-columns: 180px 1fr 300px;
      }

      .image-wrap {
        width: 188px;
        height: 188px;
      }

      .modal-image {
        width: 180px;
        height: 180px;
        border-radius: 6px;
      }

      .modal-image-placeholder {
        width: 180px;
        height: 180px;
        border-radius: 6px;
      }
    }

    @media (max-width: 860px) {
      .modal-inner {
        width: 92%;
        height: 82vh;
      }

      .modal-top {
        grid-template-columns: 1fr;
        gap: 12px;
      }

      .image-wrap {
        justify-content: flex-start;
      }
    }





    /* smaller text */
    .muted {
      color: var(--muted);
      font-size: 13px;
    }

    .small {
      font-size: 13px;
      color: var(--muted);
    }

    /* evidence table styles & highlight classes */
    .evidence-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 8px;
    }

    .evidence-table th,
    .evidence-table td {
      padding: 8px 10px;
      border: 1px solid #e6edf3;
      font-size: 13px;
      text-align: left;
      vertical-align: middle;
    }

    .gap-flag {
      background: #fff5f0;
      color: #9a3412;
      padding: 4px 6px;
      border-radius: 6px;
      display: inline-block;
      margin-left: 8px;
      font-weight: 600;
    }

    /* Highlights requested by user */
    .row-day-start {
      background: linear-gradient(90deg, #eefbe8, #f7ffef);
    }

    .row-out-return {
      background: linear-gradient(90deg, #fff0f0, #fff6f6);
    }

    .row-out {
      background: linear-gradient(90deg, #fff7ed, #fffdf8);
    }

    .highlight-long-duration {
      outline: 2px solid rgba(239, 68, 68, 0.12);
    }


{modalRow &&

              <div className="modal" onClick={closeModal}>
                <div className="modal-inner" onClick={function (e) { e.stopPropagation(); }}>
                  <div className="modal-header">
                    <h3>Details — Evidence</h3>
                    <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                      <button className="close-btn" onClick={closeModal}>Close</button>
                    </div>
                  </div>

                  <div className="modal-body">
                    {modalLoading && <div className="muted">Loading evidence…</div>}

                    <div className="modal-top" role="region" aria-label="evidence summary">
                      {/* Column 1 - Image (wrap to create yellow ring) */}
                      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                        <div className="image-wrap">
                          {(modalDetails && modalDetails.aggregated_rows && modalDetails.aggregated_rows.length > 0) ? (
                            (() => {
                              const md = modalDetails.aggregated_rows[0];
                              if (md && md.imageUrl) {
                                return <img className="modal-image" src={API_BASE + md.imageUrl} alt="Employee" onError={(e) => { e.target.style.display = 'none'; }} />;
                              } else {
                                return <div className="modal-image-placeholder">No image</div>;
                              }
                            })()
                          ) : (
                            <div className="modal-image-placeholder">—</div>
                          )}
                        </div>
                      </div>

                      {/* Column 2 - Employee details */}
                      <div className="modal-details">
                        <div className="emp-name">{sanitizeName(modalRow) || "—"}</div>
                        <div className="emp-meta">
                          <div className="meta-row"><div className="meta-label">Employee ID</div><div className="meta-value">{modalRow.EmployeeID || "—"}</div></div>
                          <div className="meta-row"><div className="meta-label">Card</div><div className="meta-value">{modalRow.CardNumber || "—"}</div></div>
                          <div className="meta-row"><div className="meta-label">Employee Email</div><div className="meta-value">{(modalDetails && modalDetails.aggregated_rows && modalDetails.aggregated_rows[0] && modalDetails.aggregated_rows[0].EmployeeEmail) ? modalDetails.aggregated_rows[0].EmployeeEmail : <span className="muted">—</span>}</div></div>
                          <div className="meta-row"><div className="meta-label">Date</div><div className="meta-value">{safeDateDisplay(modalRow.Date || modalRow.FirstSwipe)}</div></div>
                          <div className="meta-row"><div className="meta-label">Duration</div><div className="meta-value">{modalRow.Duration || (modalRow.DurationMinutes ? Math.round(modalRow.DurationMinutes) + " min" : "—")}</div></div>
                        </div>
                      </div>

                      {/* Column 3 - Reasons & Why highlighted (compact, scrollable, no scrollbar) */}
                      <div className="modal-reasons">
                        <div className="reasons-title">Reasons</div>
                        <div className="reasons-list">
                          {renderReasonChips(modalRow.Reasons)}
                        </div>

                        <div className="why-box">
                          <div style={{ fontWeight: 800, marginBottom: 8 }}>Why highlighted</div>
                          <div>
                            {renderReasonExplanations(modalRow.Reasons)}
                          </div>
                        </div>
                      </div>
                    </div>

                    <hr style={{ marginTop: 18, marginBottom: 14 }} />

                    <h4>Available evidence files</h4>
                    <div style={{ marginTop: 8 }}>
                      {modalDetails && modalDetails.raw_swipe_files && modalDetails.raw_swipe_files.length > 0
                        ? <div>
                          <ul>
                            {modalDetails.raw_swipe_files.map((f, i) => (
                              <li key={i}><b>{f}</b> — <button onClick={function () { window.location = API_BASE + "/swipes/" + encodeURIComponent(f); }}>Download</button></li>
                            ))}
                          </ul>
                        </div>
                        : <div className="muted">No raw swipe files found for this person/date.</div>
                      }
                    </div>

                    <div style={{ marginTop: 12 }}>
                      <strong>Swipe timeline (filtered for this person/date)</strong>
                      <div style={{ marginTop: 8 }}>
                        {modalDetails ? renderSwipeTimeline(modalDetails, modalRow) : <div className="muted">Evidence not loaded yet.</div>}
                      </div>
                    </div>

                    <hr />
                    <div style={{ marginTop: 8 }}>
                      <label><input type="checkbox" id="showraw" onChange={function (e) {
                        const el = document.getElementById('rawpayload');
                        if (el) el.style.display = e.target.checked ? 'block' : 'none';
                      }} /> Show raw aggregated JSON</label>
                      <div id="rawpayload" style={{ display: 'none', marginTop: 8 }}><pre>{JSON.stringify(modalRow, null, 2)}</pre></div>
                    </div>
                  </div>

                </div>
              </div>
            }
