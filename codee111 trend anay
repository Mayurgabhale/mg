{modalRow &&
              <div className="modal" onClick={closeModal}>
                <div className="modal-inner" onClick={function (e) { e.stopPropagation(); }}>
                  {/* Enhanced Header */}
                  <div className="modal-header">
                    <div className="header-content">
                      <div className="header-icon">
                        <i className="bi bi-clipboard2-data-fill"></i>
                      </div>
                      <div className="header-text">
                        <h3>Details — Evidence</h3>
                        <div className="header-subtitle small">Evidence & explanation for selected row</div>
                      </div>
                    </div>
                    <button className="close-btn" onClick={closeModal}>
                      <i className="bi bi-x-lg"></i>
                      Close
                    </button>
                  </div>

                  <div className="modal-body">
                    {modalLoading && (
                      <div className="loading-state">
                        <div className="loading-spinner"></div>
                        <span>Loading evidence…</span>
                      </div>
                    )}

                    {/* Enhanced Top Section */}
                    <div className="modal-top" role="region" aria-label="evidence summary" style={{ display:'flex', gap:12 }}>
                      {/* Column 1 - Image */}
                      <div style={{ width:160 }}>
                        <div style={{ width:140, height:140, borderRadius:8, background:'#f3f4f6', display:'flex', alignItems:'center', justifyContent:'center' }}>
                          {(modalDetails && modalDetails.aggregated_rows && modalDetails.aggregated_rows.length > 0 && modalDetails.aggregated_rows[0].imageUrl) ? (
                            <img src={API_BASE + modalDetails.aggregated_rows[0].imageUrl} alt="Employee" style={{ maxWidth:'100%', maxHeight:'100%', borderRadius:6 }} />
                          ) : (<div className="muted">No image</div>)}
                        </div>
                      </div>

                      {/* Column 2 - Details */}
                      <div style={{ flex:1 }}>
                        <div style={{ display:'flex', justifyContent:'space-between', alignItems:'start' }}>
                          <div>
                            <div style={{ fontSize:18, fontWeight:700 }}>{sanitizeName(modalRow) || "—"}</div>
                            <div className="emp-badge muted" style={{ marginTop:6 }}>ID: {modalRow.EmployeeID || "—"}</div>
                          </div>
                          <div>
                            <div style={{ display:'flex', gap:8, alignItems:'center' }}>
                              <div className="risk-badge" style={{ background: RISK_COLORS[modalRow.RiskLevel] || RISK_COLORS[getRiskLabelForRow(modalRow)] || RISK_COLORS["Low"] }}>
                                {modalRow.RiskLevel || (modalRow.RiskScore ? ("Score " + modalRow.RiskScore) : "Low")}
                              </div>
                            </div>
                            <div style={{ marginTop:8, textAlign:'right' }}>
                              <div className="muted">Violation days (90d)</div>
                              <div style={{ fontWeight:700 }}>{(modalRow.ViolationDaysLast90 !== undefined && modalRow.ViolationDaysLast90 !== null) ? modalRow.ViolationDaysLast90 : 0}</div>
                            </div>
                          </div>
                        </div>

                        <div style={{ marginTop:10, display:'grid', gridTemplateColumns:'1fr 1fr', gap:8 }}>
                          <div style={{ background:'#f8fafc', padding:8, borderRadius:6 }}>
                            <div className="muted">Card</div>
                            <div style={{ fontWeight:700 }}>{modalRow.CardNumber || "—"}</div>
                          </div>
                          <div style={{ background:'#f8fafc', padding:8, borderRadius:6 }}>
                            <div className="muted">Date</div>
                            <div style={{ fontWeight:700 }}>{safeDateDisplay(modalRow.Date || modalRow.FirstSwipe)}</div>
                          </div>
                          <div style={{ background:'#f8fafc', padding:8, borderRadius:6 }}>
                            <div className="muted">Duration</div>
                            <div style={{ fontWeight:700 }}>{modalRow.Duration || (modalRow.DurationMinutes ? Math.round(modalRow.DurationMinutes) + " min" : "—")}</div>
                          </div>
                          <div style={{ background:'#f8fafc', padding:8, borderRadius:6 }}>
                            <div className="muted">Reasons</div>
                            <div>{renderReasonChips(modalRow.Reasons)}</div>
                          </div>
                        </div>
                      </div>

                      {/* Column 3 - Explanation */}
                      <div style={{ width:280 }}>
                        <div style={{ fontWeight:700 }}>Explanation</div>
                        <div style={{ marginTop:8, maxHeight:160, overflow:'auto', background:'#fff', border:'1px solid #eef2f7', padding:8, borderRadius:6 }}>
                          {modalRow.Explanation ? <div style={{ whiteSpace: 'pre-wrap' }}>{modalRow.Explanation}</div> : <div className="muted">No explanation provided.</div>}
                        </div>
                      </div>
                    </div>

                    <div style={{ marginTop:12 }}>
                      <div style={{ fontWeight:700, marginBottom:8 }}>Available Evidence Files</div>
                      <div>
                        {modalDetails && modalDetails.raw_swipe_files && modalDetails.raw_swipe_files.length > 0 ? (
                          modalDetails.raw_swipe_files.map((f, i) => (
                            <div key={i} style={{ display:'flex', gap:8, alignItems:'center', marginBottom:6 }}>
                              <i className="bi bi-file-earmark-text"></i>
                              <div style={{ flex:1 }}>{f}</div>
                              <button className="small-button" onClick={function(){ window.location = API_BASE + "/swipes/" + encodeURIComponent(f); }}>Download</button>
                            </div>
                          ))
                        ) : (<div className="muted">No raw swipe files found for this person/date.</div>)}
                      </div>
                    </div>

                    <div style={{ marginTop:12 }}>
                      <div style={{ fontWeight:700, marginBottom:8 }}>Swipe Timeline</div>
                      <div>
                        {modalDetails ? renderSwipeTimeline(modalDetails, modalRow) : <div className="muted">Evidence not loaded yet.</div>}
                      </div>
                    </div>

                    <div style={{ marginTop:12 }}>
                      <label style={{ display:'flex', gap:8, alignItems:'center' }}>
                        <input type="checkbox" id="showraw" onChange={function (e) {
                          const el = document.getElementById('rawpayload');
                          if (el) el.style.display = e.target.checked ? 'block' : 'none';
                        }} />
                        <span className="muted">Show raw aggregated JSON</span>
                      </label>
                      <div id="rawpayload" style={{ display:'none', marginTop:8 }}>
                        <pre style={{ background:'#0b1221', color:'#fff', padding:8, borderRadius:6 }}>{JSON.stringify(modalRow, null, 2)}</pre>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }



in below code some part is missing, so add this part.. 
without chanig anythikg in below code, 
add carefully,,  
.................
{modalRow &&
                <div className="modal" onClick={closeModal}>
                  <div className="modal-inner" onClick={function (e) { e.stopPropagation(); }}>
                    {/* Enhanced Header */}
                    <div className="modal-header">
                      <div className="header-content">
                        <div className="header-icon">
                          <i className="bi bi-clipboard2-data-fill"></i>
                        </div>
                        <div className="header-text">
                          <h3>Details — Evidence</h3>
                        </div>
                      </div>
                      <button className="close-btn" onClick={closeModal}>
                        <i className="bi bi-x-lg"></i>
                        Close
                      </button>
                    </div>

                    <div className="modal-body">
                      {modalLoading && (
                        <div className="loading-state">
                          <div className="loading-spinner"></div>
                          <span>Loading evidence…</span>
                        </div>
                      )}

                      {/* Enhanced Top Section */}
                      <div className="modal-top" role="region" aria-label="evidence summary">
                        {/* Column 1 - Enhanced Image with Multi-color Border */}
                        <div className="image-section">
                          <div className="image-container">
                            <div className="multi-color-border">
                              <div className="color-ring color-1"></div>
                              <div className="color-ring color-2"></div>
                              <div className="color-ring color-3"></div>
                              <div className="color-ring color-4"></div>
                              <div className="image-content">
                                {(modalDetails && modalDetails.aggregated_rows && modalDetails.aggregated_rows.length > 0) ? (
                                  (() => {
                                    const md = modalDetails.aggregated_rows[0];
                                    if (md && md.imageUrl) {
                                      return (
                                        <img
                                          className="modal-image"
                                          src={API_BASE + md.imageUrl}
                                          alt="Employee"
                                          onError={(e) => {
                                            e.target.style.display = 'none';
                                            e.target.nextSibling.style.display = 'flex';
                                          }}
                                        />
                                      );
                                    } else {
                                      return <div className="modal-image-placeholder">No image</div>;
                                    }
                                  })()
                                ) : (
                                  <div className="modal-image-placeholder">
                                    <i className="bi bi-person-square"></i>
                                    <span>No image</span>
                                  </div>
                                )}
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* Column 2 - Enhanced Employee Details */}
                        <div className="modal-details">
                          <div className="details-header">
                            <div className="emp-name">{sanitizeName(modalRow) || "—"}</div>
                            <div className="emp-badge">
                              <i className="bi bi-person-badge"></i>
                              ID: {modalRow.EmployeeID || "—"}
                            </div>
                          </div>

                          <div className="details-grid">
                            <div className="detail-item">
                              <div className="detail-icon">
                                <i className="bi bi-credit-card"></i>
                              </div>
                              <div className="detail-content">
                                <label>Card Number</label>
                                <span>{modalRow.CardNumber || "—"}</span>
                              </div>
                            </div>

                            <div className="detail-item">
                              <div className="detail-icon">
                                <i className="bi bi-envelope"></i>
                              </div>
                              <div className="detail-content">
                                <label>Email</label>
                                <span>{(modalDetails && modalDetails.aggregated_rows && modalDetails.aggregated_rows[0] && modalDetails.aggregated_rows[0].EmployeeEmail) ? modalDetails.aggregated_rows[0].EmployeeEmail : <span className="muted">—</span>}</span>
                              </div>
                            </div>

                            <div className="detail-item">
                              <div className="detail-icon">
                                <i className="bi bi-calendar-date"></i>
                              </div>
                              <div className="detail-content">
                                <label>Date</label>
                                <span>{safeDateDisplay(modalRow.Date || modalRow.FirstSwipe)}</span>
                              </div>
                            </div>

                            <div className="detail-item">
                              <div className="detail-icon">
                                <i className="bi bi-clock"></i>
                              </div>
                              <div className="detail-content">
                                <label>Duration</label>
                                <span className="duration-badge">
                                  {modalRow.Duration || (modalRow.DurationMinutes ? Math.round(modalRow.DurationMinutes) + " min" : "—")}
                                </span>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* Column 3 - Enhanced Reasons & Why Section */}
                        <div className="modal-reasons">


                          <div className="reasons-section">
                            <div className="section-title">
                              <i className="bi bi-list-check"></i>
                              Reasons Flagged
                            </div>
                            <div className="reasons-list">
                              {renderReasonChips(modalRow.Reasons)}
                            </div>
                          </div>

                          <div className="why-section">
                            <div className="section-title">
                              <i className="bi bi-question-circle"></i>
                              Why Highlighted
                            </div>
                            <div className="why-box">
                              <div>
                                {renderReasonExplanations(modalRow.Reasons)}
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>

                      {/* Enhanced Evidence Files Section */}
                      <div className="evidence-section">
                        <div className="section-header">
                          <i className="bi bi-folder2-open"></i>
                          <h4>Available Evidence Files</h4>
                        </div>
                        <div className="files-container">
                          {modalDetails && modalDetails.raw_swipe_files && modalDetails.raw_swipe_files.length > 0 ? (
                            <div className="files-list">
                              {modalDetails.raw_swipe_files.map((f, i) => (
                                <div key={i} className="file-item">
                                  <i className="bi bi-file-earmark-text"></i>
                                  <span className="file-name">{f}</span>
                                  <button
                                    className="download-btn"
                                    onClick={function () { window.location = API_BASE + "/swipes/" + encodeURIComponent(f); }}
                                  >
                                    <i className="bi bi-download"></i>
                                    Download
                                  </button>
                                </div>
                              ))}
                            </div>
                          ) : (
                            <div className="no-files">
                              <i className="bi bi-folder-x"></i>
                              <span>No raw swipe files found for this person/date.</span>
                            </div>
                          )}
                        </div>
                      </div>

                      {/* Enhanced Timeline Section */}
                      <div className="timeline-section">
                        <div className="section-header">
                          <i className="bi bi-clock-history"></i>
                          <h4>Swipe Timeline</h4>
                          <span className="subtitle">Filtered for this person/date</span>
                        </div>
                        <div className="timeline-content">
                          {modalDetails ? renderSwipeTimeline(modalDetails, modalRow) : (
                            <div className="loading-timeline">
                              <i className="bi bi-hourglass-split"></i>
                              <span>Evidence not loaded yet.</span>
                            </div>
                          )}
                        </div>
                      </div>

                      {/* Raw JSON Toggle */}
                      <div className="raw-json-section">
                        <label className="toggle-label">
                          <input
                            type="checkbox"
                            id="showraw"
                            onChange={function (e) {
                              const el = document.getElementById('rawpayload');
                              if (el) el.style.display = e.target.checked ? 'block' : 'none';
                            }}
                          />
                          <span className="toggle-slider"></span>
                          <span className="toggle-text">
                            <i className="bi bi-code-slash"></i>
                            Show raw aggregated JSON
                          </span>
                        </label>
                        <div id="rawpayload" className="raw-json">
                          <pre>{JSON.stringify(modalRow, null, 2)}</pre>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              }
