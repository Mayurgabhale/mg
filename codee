
import React from 'react';
import CurrentLocation from './CurrentLocation';
import './EmployeeCard.css';

export default function EmployeeCard({ emp }) {
  if (!emp) return null;

  const rawStatus = emp.Employee_Status || 'Deactive';
  const normalizedStatus = rawStatus.trim().toLowerCase();

    // Determine if we should apply red background
  const isRedStatus =
    normalizedStatus === 'deactive' || normalizedStatus === 'terminated';

  return (
    <div className="employee-card-container" data-status={normalizedStatus }
    style={{
        background: isRedStatus
          ? '#e74c3c' // red background for deactive/terminated
          : 'linear-gradient(180deg, #131318 0%, #1d1d26 100%)',
      }}
    >
      {/* Left column: big photo, name, role, status */}
      <div className="left-col">
        <div className="photo-ring">
          <img
            className="photo"
            src={emp.imageUrl ? `http://localhost:5001${emp.imageUrl}` : '/images/no-photo.jpg'}
            alt={emp.EmpName || 'Employee photo'}
            onError={(e) => {
              e.target.onerror = null;
              e.target.src = '/images/no-photo.jpg';
            }}
          />
        </div>

        <div className="photo-meta">
          <div className="emp-name">{emp.EmpName || '—'}</div>
          <div className="emp-role">{emp.PersonnelType || 'Employee'}</div>
          <div className={`status-pill ${normalizedStatus}`}>{rawStatus}</div>
        </div>
      </div>

      {/* Separator line on wide screens */}
      <div className="separator" aria-hidden />

      {/* Right column: profile details and socials */}
      <div className="right-col">
        <h3 className="profile-title">Profile Details</h3>

        <table className="details-table" aria-label="employee details">
          <tbody>
            <tr>
              <td className="label">Name :</td>
              <td className="value">{emp.EmpName || '—'}</td>
            </tr>
           
            {/* other rows you previously had */}
            <tr>
              <td className="label">Employee ID</td>
              <td className="value">{emp.EmployeeID || '—'}</td>
            </tr>
            <tr>
              <td className="label">Manager</td>
              <td className="value">{emp.Manager_Name || '—'}</td>
            </tr>
            <tr>
              <td className="label">Status</td>
              <td className="value">{rawStatus}</td>
            </tr>

            <tr>
              <td className="label">Active Cards</td>
              <td className="value">{emp.Active_Cards ?? 0}</td>
            </tr>
            <tr>
              <td className="label">Total Cards</td>
              <td className="value">{emp.Total_Cards ?? 0}</td>
            </tr>

            {/* Current location component will render its own table rows */}
            <tr>
              <td colSpan="2" style={{ paddingTop: 1 }}>
                <CurrentLocation empId={emp.id ?? emp.EmployeeID} />
              </td>
            </tr>
          </tbody>
        </table>

        
      </div>
    </div>
  );
}

\
// CurrentLocation.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';

export default function CurrentLocation({ empId }) {
  const [loading, setLoading] = useState(false);
  const [loc, setLoc] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    if (!empId) {
      setLoc(null);
      setError('');
      return;
    }

    let cancelled = false;
    setLoading(true);
    setError('');
    setLoc(null);

    axios
      .get(`http://localhost:5001/api/employees/${empId}/location`)
      .then((res) => {
        if (cancelled) return;
        setLoc(res.data);
      })
      .catch((err) => {
        if (cancelled) return;
        console.error('Location load error', err && err.message ? err.message : err);
        setError('Failed to load location');
      })
      .finally(() => {
        if (!cancelled) setLoading(false);
      });

    return () => {
      cancelled = true;
    };
  }, [empId]);

  if (!empId) return null;

  return (
    <div className="current-location-card" style={{ marginTop: 1 }}>
      <h4 style={{ margin: '0 0 6px 0', fontSize: 14 }}>Swipe Details</h4>

      {loading && <div style={{ color: '#fff' }}>Loading location…</div>}

      {error && <div style={{ color: '#fff' }}>{error}</div>}

      {!loading && loc && !loc.found && (
        <div style={{ color: '#2ced0e' }}>No recent swipe</div>
      )}

      {!loading &&
        loc &&
        loc.found &&
        (() => {
          const istDate = loc.timestampUTC
            ? new Date(loc.timestampUTC).toLocaleDateString('en-IN', {
                timeZone: 'Asia/Kolkata',
              })
            : '';

          const istTime = loc.timestampUTC
            ? new Date(loc.timestampUTC).toLocaleTimeString('en-IN', {
                timeZone: 'Asia/Kolkata',
              })
            : '';

          return (
            <table
              
              className='table'
            >
              <tbody>
                <tr>
                  <td style={{ opacity: 0.8, width: 140 }}>Location</td>
                  <td>
                    {loc.partition || '—'}
                    {loc.floor ? ` · ${loc.floor}` : ''}
                  </td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Zone</td>
                  <td>{loc.Zone || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Date</td>
                  <td>{istDate || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Time</td>
                  <td>{istTime || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Door</td>
                  <td>{loc.door || '—'}</td>
                </tr>

                <tr>
                  <td style={{ }}>Direction</td>
                  <td>{loc.direction || '—'}</td>
                </tr>

              </tbody>
            </table>
          );
        })()}
    </div>
  );
}




/* Container */
.employee-card-container {
  display: flex;
  gap: 28px;
  align-items: stretch;
  background: linear-gradient(180deg, #131318 0%, #1d1d26 100%);
  border-radius: 16px;
  padding: 28px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.5);
  color: #e6eef6;
  max-width: 1100px;
  margin: 24px auto;
  font-family: "Segoe UI", Roboto, system-ui, -apple-system, "Helvetica Neue", Arial;
}

/* Left column */
.left-col {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 18px;
  min-width: 280px; /* keeps big photo on wide screens */
}

/* gradient ring around photo (instagram-like) */
.photo-ring {
  display: inline-block;
  /* border-radius: 50%; */
  padding: 3px; /* thickness of the ring */
  background: conic-gradient(
    from 180deg,
    #ff2d95 0deg,
    #ffcf2d 80deg,
    #2de6b7 160deg,
    #7a64ff 240deg,
    #ff2d95 360deg
  );
  /* subtle inner shadow to match look */
  box-shadow: 0 6px 18px rgba(0,0,0,0.45), inset 0 1px 0 rgba(255,255,255,0.03);
}

/* photo size - responsive using clamp */
.photo {
  /* width: clamp(160px, 28vw, 260px);  */
  /* height: clamp(160px, 28vw, 260px);  */
  height: 290px;
  object-fit: cover;
  display: block;
  /* border-radius: 50%; */
  border: 4px solid rgba(255,255,255,0.04); 
  background: #222;
  box-shadow: 0 8px 18px rgba(0,0,0,0.5);
}

/* Photo meta (name, role, status) */
.photo-meta {
  text-align: center;
  margin-top: 4px;
}

.emp-name {
  font-size: clamp(18px, 2.6vw, 26px); /* big name under photo */
  font-weight: 700;
  color: #38c6ff; /* cyan-ish like reference */
  margin-bottom: 6px;
}

.emp-role {
  font-size: 13px;
  color: rgba(230,238,246,0.7);
  margin-bottom: 8px;
}

/* Status pill under name */
.status-pill {
  display: inline-block;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 13px;
  font-weight: 600;
  color: white;
  background: #6c757d;
  box-shadow: 0 3px 8px rgba(0,0,0,0.35);
}


.status-pill.deactive,
.status-pill.terminated {
  background: #e74c3c;
}

/* status color variants */
.status-pill.active { background: #12c38a; }
.status-pill.deactive { background: #7a7a7a; }
.status-pill.terminated { background: #e74c3c; }

/* separator line (vertical) */
.separator {
  width: 1px;
  background: linear-gradient(to bottom, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
  border-radius: 1px;
  align-self: stretch;
}

/* Right column */
.right-col {
  flex: 1;
  min-width: 320px;
  display: flex;
  flex-direction: column;
  gap: 14px;
  padding-left: 18px;
}

/* Profile title */
.profile-title {
  margin: 0 0 6px 0;
  color: #49c2ff;
  font-size: 20px;
  letter-spacing: 0.2px;
}

/* details table */
.details-table {
  width: 100%;
  border-collapse: collapse;
  color: #e7eef7;
  margin-bottom: 8px;
}

.details-table td {
  padding: 8px 6px;
  border-bottom: 1px solid rgba(255,255,255,0.03);
}

.details-table .label {
  opacity: 0.8;
  width: 160px;
  font-weight: 600;
  color: rgba(255,255,255,0.85);
}

.details-table .value {
  color: rgba(230,238,246,0.95);
}

/* Socials and footer */
.social-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  margin-top: 6px;
}

/* icons: default size and background circle like reference */
.social-icons a {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: linear-gradient(180deg, rgba(0,200,255,0.14), rgba(0,200,255,0.05));
  color: #7fe6ff;
  text-decoration: none;
  font-size: 16px;
  margin-right: 8px;
  box-shadow: 0 6px 16px rgba(0,0,0,0.45);
}

/* small footer text */
.made-by {
  font-size: 13px;
  color: rgba(230,238,246,0.7);
}

.heart {
  color: #ff6b6b;
  margin: 0 4px;
}

/* Responsive: stack on smaller screens */
@media (max-width: 860px) {
  .employee-card-container {
    flex-direction: column;
    padding: 20px;
    gap: 18px;
  }
  .left-col {
    min-width: auto;
    align-items: center;
  }
  .separator { display: none; }
  .right-col { padding-left: 0; }
  .details-table .label { width: 110px; }
}

/* Very small screens: tighten spacing */
@media (max-width: 420px) {
  .photo { width: 160px; height: 160px; }
  .emp-name { font-size: 18px; }
  .details-table .label { width: 100px; font-size: 13px; }
}






.show-more-btn {
  background: linear-gradient(90deg, #38c6ff, #4e9dff);
  border: none;
  color: white;
  padding: 8px 14px;
  font-size: 14px;
  border-radius: 20px;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  margin-top: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.4);
  transition: background 0.3s ease;
}

.show-more-btn:hover {
  background: linear-gradient(90deg, #4ed9ff, #6aa9ff);
}
