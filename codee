<Card
  elevation={4}
  sx={{
    background: "linear-gradient(145deg, #fffbe6, #fff9db)",
    border: "1px solid #e6c200",
    borderRadius: 3,
    p: 2,
    boxShadow: "0 4px 12px rgba(0,0,0,0.08)",
  }}
>
  <CardContent>
    <Grid container spacing={3} alignItems="center">
      {/* Region */}
      <Grid item xs={12} md={2}>
        <FormControl fullWidth size="small">
          <InputLabel id="region-select-label" sx={{ color: "#333" }}>
            Region
          </InputLabel>
          <Select
            labelId="region-select-label"
            value={region}
            onChange={(e) => setRegion(e.target.value)}
            sx={{
              bgcolor: "#fff",
              borderRadius: 1,
              color: "#000", // text inside select
              "& .MuiSvgIcon-root": { color: "#444" }, // dropdown arrow
            }}
          >
            {REGIONS.map((r) => (
              <MenuItem key={r.value} value={r.value}>
                {r.label}
              </MenuItem>
            ))}
          </Select>
        </FormControl>
      </Grid>

      {/* City */}
      <Grid item xs={12} md={3}>
        <FormControl fullWidth size="small">
          <InputLabel id="city-select-label" sx={{ color: "#333" }}>
            City / Partition
          </InputLabel>
          <Select
            labelId="city-select-label"
            value={city}
            onChange={(e) => setCity(e.target.value)}
            renderValue={(v) => v || ""}
            sx={{
              bgcolor: "#fff",
              borderRadius: 1,
              color: "#000",
              "& .MuiSvgIcon-root": { color: "#444" },
            }}
          >
            <MenuItem value="">
              <em>All</em>
            </MenuItem>
            {citiesForRegion?.length > 0 ? (
              citiesForRegion.map((c, idx) => (
                <MenuItem key={idx} value={c}>
                  {c}
                </MenuItem>
              ))
            ) : (
              <MenuItem disabled value="">
                No predefined cities (type manually below)
              </MenuItem>
            )}
          </Select>
        </FormControl>

        <TextField
          fullWidth
          size="small"
          placeholder="Or type manually"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          sx={{
            mt: 1,
            bgcolor: "#fff",
            borderRadius: 1,
            "& .MuiInputBase-input": { color: "#000" },
            "& .MuiInputLabel-root": { color: "#333" },
          }}
        />
      </Grid>

      {/* Date Pickers (fix text color) */}
      {useRange ? (
        <>
          <Grid item xs={12} md={3}>
            <TextField
              label="Start Date"
              type="date"
              fullWidth
              size="small"
              value={startDate}
              onChange={(e) => setStartDate(e.target.value)}
              inputRef={startDateRef}
              InputLabelProps={{ shrink: true, style: { color: "#333" } }}
              InputProps={{
                style: { color: "#000" },
                endAdornment: (
                  <InputAdornment position="end">
                    <IconButton
                      size="small"
                      onClick={() => openNativeDatePicker(startDateRef)}
                      sx={{ color: "#e6c200" }}
                    >
                      <DateRangeIcon />
                    </IconButton>
                  </InputAdornment>
                ),
              }}
              sx={{ bgcolor: "#fff", borderRadius: 1 }}
            />
          </Grid>
          <Grid item xs={12} md={3}>
            <TextField
              label="End Date"
              type="date"
              fullWidth
              size="small"
              value={endDate}
              onChange={(e) => setEndDate(e.target.value)}
              inputRef={endDateRef}
              InputLabelProps={{ shrink: true, style: { color: "#333" } }}
              InputProps={{
                style: { color: "#000" },
                endAdornment: (
                  <InputAdornment position="end">
                    <IconButton
                      size="small"
                      onClick={() => openNativeDatePicker(endDateRef)}
                      sx={{ color: "#e6c200" }}
                    >
                      <DateRangeIcon />
                    </IconButton>
                  </InputAdornment>
                ),
              }}
              sx={{ bgcolor: "#fff", borderRadius: 1 }}
            />
          </Grid>
        </>
      ) : (
        <Grid item xs={12} md={3}>
          <TextField
            label="Date"
            type="date"
            fullWidth
            size="small"
            value={singleDate}
            onChange={(e) => setSingleDate(e.target.value)}
            inputRef={singleDateRef}
            InputLabelProps={{ shrink: true, style: { color: "#333" } }}
            InputProps={{
              style: { color: "#000" },
              endAdornment: (
                <InputAdornment position="end">
                  <IconButton
                    size="small"
                    onClick={() => openNativeDatePicker(singleDateRef)}
                    sx={{ color: "#e6c200" }}
                  >
                    <DateRangeIcon />
                  </IconButton>
                </InputAdornment>
              ),
            }}
            sx={{ bgcolor: "#fff", borderRadius: 1 }}
          />
        </Grid>
      )}

      {/* Search Fields (fix text color) */}
      <Grid item xs={12} md={4}>
        <TextField
          fullWidth
          label="Search Employee ID"
          value={searchEmployeeId}
          onChange={(e) => setSearchEmployeeId(e.target.value)}
          size="small"
          helperText="Type an ID and click Run"
          sx={{
            bgcolor: "#fff",
            borderRadius: 1,
            "& .MuiInputBase-input": { color: "#000" },
            "& .MuiInputLabel-root": { color: "#333" },
            "& .MuiFormHelperText-root": { color: "#666" },
          }}
        />
      </Grid>
      <Grid item xs={12} md={4}>
        <TextField
          fullWidth
          label="Search Employee Name"
          value={searchEmployeeName}
          onChange={(e) => setSearchEmployeeName(e.target.value)}
          size="small"
          helperText="Type name and click Run"
          sx={{
            bgcolor: "#fff",
            borderRadius: 1,
            "& .MuiInputBase-input": { color: "#000" },
            "& .MuiInputLabel-root": { color: "#333" },
            "& .MuiFormHelperText-root": { color: "#666" },
          }}
        />
      </Grid>
      <Grid item xs={12} md={4}>
        <TextField
          fullWidth
          label="Search Card Number"
          value={searchCardNumber}
          onChange={(e) => setSearchCardNumber(e.target.value)}
          size="small"
          helperText="Search by card number"
          sx={{
            bgcolor: "#fff",
            borderRadius: 1,
            "& .MuiInputBase-input": { color: "#000" },
            "& .MuiInputLabel-root": { color: "#333" },
            "& .MuiFormHelperText-root": { color: "#666" },
          }}
        />
      </Grid>
    </Grid>
  </CardContent>
</Card>