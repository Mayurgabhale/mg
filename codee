C:\Users\W0024618\Desktop\employee-verification\frontend\src\components\CurrentLocation.jsx



// CurrentLocation.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';

export default function CurrentLocation({ empId }) {
  const [loading, setLoading] = useState(false);
  const [loc, setLoc] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    if (!empId) {
      setLoc(null);
      setError('');
      return;
    }

    let cancelled = false;
    setLoading(true);
    setError('');
    setLoc(null);

    axios.get(`http://localhost:5001/api/employees/${empId}/location`, { timeout: 5000 })
      .then(res => {
        if (cancelled) return;
        setLoc(res.data);
      })
      .catch(err => {
        if (cancelled) return;
        console.error('Location load error', err && err.message ? err.message : err);
        setError('Failed to load location');
      })
      .finally(() => {
        if (!cancelled) setLoading(false);
      });

    return () => {
      cancelled = true;
    };
  }, [empId]);

  if (!empId) return null;

  // return (
  //   <div className="current-location-card" style={{ marginTop: 8 }}>
  //     <h4 style={{ margin: '0 0 6px 0', fontSize: 14 }}>Swipe Details</h4>

  //     {loading && <div style={{ color: '#fff' }}>Loading location…</div>}

  //     {error && <div style={{ color: '#fff' }}>{error}</div>}

  //     {!loading && loc && !loc.found && <div style={{ color: '#2ced0e' }}>No recent swipe</div>}

  //     {!loading && loc && loc.found && (
  //       <div style={{ fontSize: 14, color: '#fff' }}>
  //         <div style={{ fontWeight: 600 }}>
  //           {loc.partition || '—'}{loc.floor ? ` · ${loc.floor}` : ''}
  //         </div>

  //         <div style={{ marginTop: 6, color: '#fff' }}>
  //           {loc.door && <div>{loc.door}</div>}
  //           {loc.direction && <div>Direction: {loc.direction}</div>}
  //           {loc.timestampUTC && (
  //             <div style={{ marginTop: 6, fontSize: 13, color: '#fff' }}>
  //               Last seen: {new Date(loc.timestampUTC).toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' })} (IST)
  //             </div>
  //           )}
  //         </div>
  //       </div>
  //     )}
  //   </div>
  // );




  return (
    <div className="current-location-card" style={{ marginTop: 2 }}>
      <h4 style={{ margin: '0 0 2px 0', fontSize: 14 }}>Swipe Details</h4>

      {loading && <div style={{ color: '#fff' }}>Loading location…</div>}

      {error && <div style={{ color: '#fff' }}>{error}</div>}

      {!loading && loc && !loc.found && (
        <div style={{ color: '#2ced0e' }}>No recent swipe</div>
      )}


     {!loading && loc && loc.found && (() => {
  const istDate = loc.timestampUTC
    ? new Date(loc.timestampUTC).toLocaleDateString('en-IN', {
        timeZone: 'Asia/Kolkata',
      })
    : '';

  const istTime = loc.timestampUTC
    ? new Date(loc.timestampUTC).toLocaleTimeString('en-IN', {
        timeZone: 'Asia/Kolkata',
      })
    : '';

  return (
    <div
      className="location-info"
      style={{
        display: 'grid',
        gridTemplateColumns: '140px 1fr',
        gap: '6px 12px',
        alignItems: 'center',
        fontSize: 13,
        color: '#000',
      }}
    >
      <label style={{ opacity: 0.8 }}>Location</label>
      <span>
        {loc.partition || '—'}
        {loc.floor ? ` · ${loc.floor}` : ''}
       
      </span>

      <label style={{ opacity: 0.8 }}>Zone :</label>
      <span>{loc.Zone || '—'}</span>

      <label style={{ opacity: 0.8 }}>Date :</label>
      <span>{istDate || '—'}</span>

      <label style={{ opacity: 0.8 }}>Time :</label>
      <span>{istTime || '—'}</span>

      <label style={{ opacity: 0.8 }}>Door :</label>
      <span>{loc.door || '—'}</span>

      <label style={{ opacity: 0.8 }}>Direction :</label>
      <span>{loc.direction || '—'}</span>
    </div>
  );
})()}



    </div>
  )

}








///////////////////////

C:\Users\W0024618\Desktop\employee-verification\frontend\src\components\EmployeeCard.jsx




// EmployeeCard.jsx
import React from 'react';
import CurrentLocation from './CurrentLocation';

export default function EmployeeCard({ emp }) {
  if (!emp) return null;

  const rawStatus = emp.Employee_Status || 'Deactive';
  const normalizedStatus = rawStatus.trim().toLowerCase();
  const isTerminated = normalizedStatus === 'terminated';

  return (
    // <div
    //   className={`employee-card ${isTerminated ? 'terminated' : ''}`}
    //   data-status={normalizedStatus}
    //   style={{
    //     display: 'flex',
    //     gap: '1rem',
    //     background: '#000',
    //     padding: '1rem',
    //     borderRadius: '8px',
    //     boxShadow: '0 1px 4px rgba(0,0,0,0.08)'
    //   }}
    // >




    
<div
  className={`employee-card ${isTerminated ? 'terminated' : ''}`}
  data-status={normalizedStatus}
  style={{
    display: 'flex',
    gap: '1rem',
    background:
      normalizedStatus === 'active'
        ? 'linear-gradient(to right, rgba(40, 167, 69, 1) 0%, rgba(40, 167, 69, 0.1) 100%)'
        : '#000',
    padding: '1rem',
    borderRadius: '8px',
    boxShadow: '0 1px 4px rgba(0,0,0,0.08)',
    color:'#000'
  }}
>

      {/* Profile Image */}
      {/* <div className="card-photo-section" style={{ minWidth: 140 }}>
        <div className="photo-wrapper" style={{ position: 'relative' }}>
          <img
            src={`http://localhost:5001${emp.imageUrl}`}
            alt={emp.EmpName}
            style={{ width: 120, height: 120, objectFit: 'cover', borderRadius: 8 }}
            onError={(e) => {
              e.target.onerror = null;
              e.target.src = '/images/no-photo.jpg';
            }}  
          />
          <span
            className={`status-badge ${normalizedStatus === 'active' ? 'active' : 'deactive'}`}
            style={{
              position: 'absolute',
              bottom: 6,
              left: 6,
              background: normalizedStatus === 'active' ? '#0b9' : '#999',
              color: '#fff',
              padding: '4px 8px',
              borderRadius: 6,
              fontSize: 12
            }}
          >
            {rawStatus}
          </span>
        </div>
      </div> */}


      {/* Profile Image */}
<div
  className="card-photo-section"
  style={{
    minWidth: 140,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  }}
>
  <div className="photo-wrapper" style={{ position: 'relative' }}>
    <img
      src={`http://localhost:5001${emp.imageUrl}`}
      alt={emp.EmpName}
      style={{
        width: 325,
        height: 350,
        // objectFit: 'cover',
       
        border: '2px solid #f0f0f0'
      }}
      onError={(e) => {
        e.target.onerror = null;
        e.target.src = '/images/no-photo.jpg';
      }}
    />
    <span
      className={`status-badge ${normalizedStatus === 'active' ? 'active' : 'deactive'}`}
      style={{
        position: 'absolute',
        bottom: 6,
        left: '50%',
        transform: 'translateX(-50%)',
        background: normalizedStatus === 'active' ? '#0b9' : '#999',
        color: '#fff',
        padding: '4px 8px',
        borderRadius: 6,
        fontSize: 12
      }}
    >
      {rawStatus}
    </span>
  </div>
</div>


      



      {/* Employee Info */}
      <div className="card-details" style={{ flex: 1 }}>
        <h2 className="emp-name" style={{ margin: 0, marginBottom: 8 }}>{emp.EmpName}</h2>

        <div className="card-info" style={{ display: 'grid', gridTemplateColumns: '140px 1fr', gap: '6px 12px', alignItems: 'center' }}>
          <label style={{ opacity: 0.8, fontSize: 13 }}>Employee ID</label>
          <span>{emp.EmployeeID || '—'}</span>

          <label style={{ opacity: 0.8, fontSize: 13 }}>Personnel Type</label>
          <span>{emp.PersonnelType || '—'}</span>

          <label style={{ opacity: 0.8, fontSize: 13 }}>Manager</label>
          <span>{emp.Manager_Name || '—'}</span>

          <label style={{ opacity: 0.8, fontSize: 13 }}>Manager WU ID</label>
          <span>{emp.Manager_WU_ID || '—'}</span>

          <label style={{ opacity: 0.8, fontSize: 13 }}>Status</label>
          <span>{rawStatus}</span>

          <label style={{ opacity: 0.8, fontSize: 13 }}>Total Cards</label>
          <span>{emp.Total_Cards ?? 0}</span>

          <label style={{ opacity: 0.8, fontSize: 13 }}>Active Cards</label>
          <span>{emp.Active_Cards ?? 0}</span>
        </div>

        {/* Current Location component (live) */}
        <div style={{ marginTop: 1 , color:'#2ced0e'}}>
          <CurrentLocation empId={emp.id} style={{  color:'#fff'}} />
        </div>
      </div>
    </div>
  );
}




///////////////////////////







