i dont like this, creat clean and more atractive. 


// src/components/PersonnelSummaryCards.jsx
import React from 'react';
import { Card, Row, Col, Badge } from 'react-bootstrap';
import { FaUserTie, FaHardHat, FaUsers } from 'react-icons/fa';

const COLORS = ['#FFC72C', '#4CAF50', '#FF6F61', '#2196F3', '#9C27B0'];

export default function PersonnelSummaryCards({ data = [] }) {
  // sort data by highest count first
  const sortedData = [...data].sort((a, b) => b.count - a.count);
  const total = sortedData.reduce((sum, e) => sum + e.count, 0);

  if (!sortedData.length || total === 0) {
    return (
      <Card body className="bg-dark text-warning text-center shadow-lg" style={{ borderRadius: 12 }}>
        No personnel data
      </Card>
    );
  }

  return (
    <Card
      className="mb-4 shadow-lg"
      style={{
        background: 'linear-gradient(145deg, #111, #1f1f1f)',
        borderRadius: 16,
        border: 'none',
        boxShadow: '0 10px 20px rgba(0,0,0,0.6), inset 0 2px 6px rgba(255,255,255,0.05)',
      }}
    >
      <Card.Header
        className="text-center fw-bold"
        style={{
          background: 'linear-gradient(to right, #FFC72C, #FF9800)',
          color: '#000',
          borderRadius: '12px 12px 0 0',
          fontSize: '1.2rem',
          textShadow: '0 1px 2px rgba(255,255,255,0.5)',
        }}
      >
        Personnel Type Occupancy
      </Card.Header>

      <Card.Body
        style={{
          height: 450,
          padding: '1.5rem',
          overflowY: 'auto',
        }}
      >
        <Row>
          {sortedData.map((entry, index) => {
            let icon;
            if (entry.personnelType.toLowerCase().includes('employee')) icon = <FaUserTie />;
            else if (entry.personnelType.toLowerCase().includes('contractor')) icon = <FaHardHat />;
            else icon = <FaUsers />;

            const color = COLORS[index % COLORS.length];

            return (
              <Col key={entry.personnelType} xs={12} md={6} lg={4} className="mb-4">
                <div
                  className="p-3 text-center h-100"
                  style={{
                    background: `linear-gradient(145deg, #2a2a2a, #1c1c1c)`,
                    borderRadius: 14,
                    border: `1px solid ${color}`,
                    boxShadow: `0 6px 12px rgba(0,0,0,0.7), inset 0 1px 4px rgba(255,255,255,0.1)`,
                    transform: 'translateY(0)',
                    transition: 'all 0.25s ease-in-out',
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.transform = 'translateY(-6px) scale(1.02)';
                    e.currentTarget.style.boxShadow = `0 12px 20px rgba(0,0,0,0.9), 0 0 12px ${color}55`;
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.transform = 'translateY(0) scale(1)';
                    e.currentTarget.style.boxShadow = `0 6px 12px rgba(0,0,0,0.7), inset 0 1px 4px rgba(255,255,255,0.1)`;
                  }}
                >
                  <div style={{ fontSize: '2.5rem', color }} className="mb-3">
                    {icon}
                  </div>
                  <h5 style={{ color: '#fff', marginBottom: '0.75rem' }}>{entry.personnelType}</h5>
                  <Badge
                    bg="secondary"
                    style={{
                      fontSize: '1.4rem',
                      fontWeight: 'bold',
                      padding: '0.6rem 1.4rem',
                      backgroundColor: color,
                      boxShadow: `0 0 15px ${color}aa, inset 0 0 8px rgba(0,0,0,0.5)`,
                      borderRadius: '12px',
                    }}
                  >
                    {entry.count}
                  </Badge>
                </div>
              </Col>
            );
          })}
        </Row>

      
      </Card.Body>
    </Card>
  );
}
