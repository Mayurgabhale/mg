not all rejection 
only for this
 {
      "floor": "US.CO.OBS",
      "rejectionCount": 44
    },
    {
US.CO.OBS +++ ok
this is door name "US.CO.HQ. 12. SOUTH LOBBY DOORS-IN___IN
if getting "US.CO.HQ. 12. SOUTH LOBBY DOORS-IN___IN door rejection: show Floor 12 floor ok 
and 
C:\Users\W0024618\Desktop\swipeData\employee-ai-insights\data\denverDoorFloorMap.js
// Auto-generated from data/doorDenver.xlsx
const normalizeKey = require('./normalizeKey');
const rawMap = {
  "US.CO.HQ. 12. SOUTH LOBBY DOORS-IN___IN": "Floor 12",
  "US.CO.HQ. 12. SOUTH LOBBY DOORS-IN___OUT": "Out of office",
  "US.CO.HQ. 12. IDF RESTRICTED DOOR___IN": "Floor 12",
  "US.CO.HQ. 12. IDF RESTRICTED DOOR___OUT": "Out of office",
  "US.CO.HQ. 12. STORAGE ROOM_11:01:0A___IN": "Floor 12",
  "US.CO.HQ. 12. STORAGE ROOM_11:01:0A___OUT": "Out of office",
  "US.CO.HQ. 12. NORTH STAIRWELL-IN___IN": "Floor 12",
  "US.CO.HQ. 12. NORTH STAIRWELL-IN___OUT": "Out of office",
  "US.CO.HQ. 12. FREIGHT ELEVATOR LOBBY-IN___IN": "Floor 12",
  "US.CO.HQ. 12. FREIGHT ELEVATOR LOBBY-IN___OUT": "Out of office",
  "US.CO.HQ. 12. MOTHERS ROOM_11:01:CC___IN": "Floor 12",
  "US.CO.HQ. 12. MOTHERS ROOM_11:01:CC___OUT": "Out of office",
  "US.CO.HQ. 12. SOUTH STAIRWELL-IN___IN": "Floor 12",
  "US.CO.HQ. 12. SOUTH STAIRWELL-IN___OUT": "Out of office",
  "US.CO.HQ. 11. IDF ROOM_11:01:42 RESTRICTED DOOR___IN": "Floor 11",
  "US.CO.HQ. 11. IDF ROOM_11:01:42 RESTRICTED DOOR___OUT": "Out of office",
  "US.CO.HQ. 11. STORAGE ROOM_11:01:DD___IN": "Floor 11",
  "US.CO.HQ. 11. STORAGE ROOM_11:01:DD___OUT": "Out of office",
  "US.CO.HQ. 11. NORTH STAIRWELL-IN___IN": "Floor 11",
  "US.CO.HQ. 11. NORTH STAIRWELL-IN___OUT": "Out of office",
  "US.CO.HQ. 11. FREIGHT ELEVATOR LOBBY-IN___IN": "Floor 11",
  "US.CO.HQ. 11. FREIGHT ELEVATOR LOBBY-IN___OUT": "Out of office",
  "US.CO.HQ. 11. QUIET ROOM_11:01:0E___IN": "Floor 11",
  "US.CO.HQ. 11. QUIET ROOM_11:01:0E___OUT": "Out of office",
  "US.CO.HQ. 11. SOUTH STAIRWELL-IN___IN": "Floor 11",
  "US.CO.HQ. 11. SOUTH STAIRWELL-IN___OUT": "Out of office",
  "US.CO.HQ. 09. IDF ROOM_11:00:98 RESTRICTED DOOR___IN": "Floor 09",
  "US.CO.HQ. 09. IDF ROOM_11:00:98 RESTRICTED DOOR___OUT": "Out of office",
  "US.CO.HQ. 09. STORAGE ROOM_11:01:05___IN": "Floor 09",
  "US.CO.HQ. 09. STORAGE ROOM_11:01:05___OUT": "Out of office",
  "US.CO.HQ. 09. SOUTH STAIRWELL-IN___IN": "Floor 09",
  "US.CO.HQ. 09. SOUTH STAIRWELL-IN___OUT": "Out of office",
  "US.CO.HQ. 09. FREIGHT ELEVATOR LOBBY-IN___IN": "Floor 09",
  "US.CO.HQ. 09. FREIGHT ELEVATOR LOBBY-IN___OUT": "Out of office",



// controllers/denverRejection.js
const { denver } = require("../config/siteConfig");

async function getRejections(req, res) {
  try {
    const pool = await denver.poolPromise;

    // Optional floors from query params (?parts=Floor%2001,Floor%2009)
    const parts = req.query.parts
      ? req.query.parts.split(",").map(f => `'${f.trim()}'`).join(",")
      : null;

    // üëá Common CTE
    const baseCTE = `
      WITH CombinedQuery AS (
        SELECT
          DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
          t1.ObjectName1      AS ObjectName1,
          t1.ObjectName2      AS Door,
          t1.PartitionName2   AS PartitionName2,
          COALESCE(
            TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]','varchar(50)'),
            TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]','varchar(50)'),
            sc.value
          )                    AS CardNumber,
          t3.Name              AS PersonnelType,
          t5_rej.value         AS RejectionType
        FROM [ACVSUJournal_00010029].[dbo].[ACVSUJournalLog] AS t1
        LEFT JOIN [ACVSCore].[Access].[Personnel] AS t2
          ON t1.ObjectIdentity1 = t2.GUID
        LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3
          ON t2.PersonnelTypeId = t3.ObjectID
        LEFT JOIN [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxml] AS t_xml
          ON t1.XmlGUID = t_xml.GUID
        LEFT JOIN (
          SELECT GUID, value
          FROM [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxmlShred]
          WHERE Name IN ('Card','CHUID')
        ) AS sc
          ON t1.XmlGUID = sc.GUID
        LEFT JOIN [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxmlShred] AS t5_rej
          ON t1.XmlGUID = t5_rej.GUID AND t5_rej.Name = 'RejectCode'
        WHERE
          t1.MessageType = 'CardRejected'
          ${parts ? `AND t1.PartitionName2 IN (${parts})` : ""}
          AND CONVERT(DATE,
               DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
              ) >= DATEADD(DAY, -7, CONVERT(DATE, GETDATE()))
      )
    `;

    // 1Ô∏è‚É£ Floor-wise count
    const countQuery = `
      ${baseCTE}
      SELECT
        PartitionName2 AS floor,
        COUNT(*) AS rejectionCount
      FROM CombinedQuery
      GROUP BY PartitionName2
      ORDER BY floor;
    `;

    // 2Ô∏è‚É£ Detailed records
    const detailsQuery = `
      ${baseCTE}
      SELECT
        LocaleMessageTime,
        CONVERT(date, LocaleMessageTime)    AS DateOnly,
        CONVERT(time(0), LocaleMessageTime) AS SwipeTime,
        CardNumber,
        PersonnelType,
        PartitionName2                     AS Location,
        Door,
        RejectionType
      FROM CombinedQuery
      ORDER BY LocaleMessageTime DESC;
    `;

    // Run both queries
    const counts = await pool.request().query(countQuery);
    const details = await pool.request().query(detailsQuery);

    // Respond with combined payload
    res.json({
      summary: counts.recordset,
      details: details.recordset
    });

  } catch (err) {
    console.error("Error fetching rejection data:", err);
    res.status(500).send("Server Error");
  }
}

module.exports = { getRejections };
