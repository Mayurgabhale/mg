



import React, { useState, useMemo } from 'react';
import { Card, Row, Col, Badge, Button } from 'react-bootstrap';
import {
  FaHome,
  FaBuilding,
  FaLayerGroup,
  FaEnvelopeOpenText,
  FaMobileAlt,
  FaMapMarkerAlt,
  FaUserTie,
  FaUserShield,
  FaUserNurse,
  FaUsers,
  FaFilter,
  FaEye,
  FaEyeSlash
} from 'react-icons/fa';

const firstColumnRoles = [
  'Site Head',
  'BCM Team / Site Operations',
  'HR',
  'Incident Controller'
];

const roleIcons = {
  'Site Head': <FaUserTie style={{ color: '#4FC3F7' }} />,
  'BCM Team / Site Operations': <FaUserShield style={{ color: '#4DB6AC' }} />,
  'HR': <FaUserTie style={{ color: '#9575CD' }} />,
  'Incident Controller': <FaUserShield style={{ color: '#FFB74D' }} />,
  'ERT Team Leader': <FaUserShield style={{ color: '#E57373' }} />,
  'ERT Team Members': <FaUsers style={{ color: '#64B5F6' }} />,
  'First Aid Team': <FaUserNurse style={{ color: '#FF8A65' }} />
};

const baseLocationByRole = {
  'Site Head': 'Podium Floor – Red Zone',
  'HR': 'Podium Floor – Red Zone',
  'Incident Controller': 'Podium Floor – Red Zone',
  'First Aid Team': 'Podium Floor – Green Zone',
  'ERT Team Leader': 'Podium Floor – Green Zone',
  'BCM Team / Site Operations': 'Podium Floor – Red Zone'
};

// ---- Photo helpers ----
const DEFAULT_PHOTO = '/photos/default.png';

// Fixed the regular expression in toSlug function
const toSlug = (name = '') =>
  name
    .toLowerCase()
    .trim()
    .replace(/[^a-z0-9]+/g, '_') // non-alphanumerics -> underscore
    .replace(/^_+|_+$/g, ''); // trim leading/trailing underscores

const getPhotoSrc = (member) => {
  if (!member) return DEFAULT_PHOTO;

  // 1) explicit URL if present (e.g., from backend)
  if (member.photo) return member.photo;

  // 3) name-based file
  const name = member.name || member.Name;
  if (name) return `/photos/${toSlug(name)}.png`;

  // 4) fallback
  return DEFAULT_PHOTO;
};

function renderRoleCard(role, membersRaw, filterZone) {
  const members = filterZone
    ? membersRaw.filter(m =>
      m.present && (
        (m.zone && m.zone.includes(filterZone)) ||
        baseLocationByRole[role].includes(filterZone)
      )
    )
    : membersRaw;

  return (
    <Card className="shadow-sm mb-2" key={role} style={{ backgroundColor: '#1e293b', border: 'none', borderRadius: '0px' }}>
      <Card.Header style={{
        borderBottom: '1px solid #334155',
        fontWeight: '600',
        fontSize: '1.1rem',
        backgroundColor: 'rgba(30, 41, 59, 0.8)',
        display: 'flex',
        alignItems: 'center',
        gap: '10px',
        // padding: '1rem',
        color: '#e2e8f0'
      }}>
        {roleIcons[role] || <FaUserTie style={{ color: '#94a3b8' }} />}
        {role}
      </Card.Header>
      <Card.Body style={{ padding: '1rem' }}>
        {members.length > 0 ? members.map((m, i) => {
          const location = m.present ? (m.zone || 'Unknown Zone') : baseLocationByRole[role];
          return (
            <div key={i} className="mb-2 pb-0" style={{ borderBottom: i < members.length - 1 ? '1px solid #334155' : 'none' }}>

              {/* <div className="d-flex justify-content-between align-items-center">
                <div className="d-flex align-items-center">
                  <img 
                    src={getPhotoSrc(m)} 
                    alt={m.name || 'Member'} 
                    style={{ 
                      width: 52, 
                      height: 52, 
                      borderRadius: '50%', 
                      objectFit: 'cover', 
                      marginRight: 12,
                      border: '2px solid #475569'
                    }} 
                    onError={(e) => {
                      e.currentTarget.onerror = null;
                      e.currentTarget.src = DEFAULT_PHOTO;
                    }} 
                  />
                  <span style={{ fontWeight: '500', color: '#f1f5f9' }}>{m.name}</span>
                </div>
                <Badge bg={m.present ? 'success' : 'danger'} pill style={{ fontSize: '0.7rem' }}>
                  {m.present ? 'Available' : 'Away'}
                </Badge>
              </div> */}



              <div className="d-flex justify-content-between align-items-center">
                <div className="d-flex align-items-center">
                  <div style={{
                    width: 52,
                    height: 52,
                    borderRadius: '50%',
                    overflow: 'hidden',
                    marginRight: 12,
                    // border: '3px solid #FFCC00',
                    border: m.present ? '3px solid #0df705' : '2px solid rgb(227, 230, 235)',

                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center'
                  }}>
                    <img
                      src={getPhotoSrc(m)}
                      alt={m.name || 'Member'}
                      style={{
                        width: '100%',
                        height: '100%',
                        objectFit: 'cover',
                        objectPosition: 'center top' // This will focus on the face area
                      }}
                      onError={(e) => {
                        e.currentTarget.onerror = null;
                        e.currentTarget.src = DEFAULT_PHOTO;
                      }}
                    />
                  </div>
                  <span style={{ fontWeight: '500', color: '#f1f5f9' }}>{m.name}</span>
                </div>
                <Badge bg={m.present ? 'success' : 'danger'} pill style={{ fontSize: '0.7rem' }}>
                  {m.present ? 'Available' : 'Away'}
                </Badge>
              </div>




              <div className="mt-2" style={{ fontSize: '0.85rem' }}>
                <div className="d-flex align-items-center mb-1">
                  <FaEnvelopeOpenText className="me-2" style={{ color: '#60a5fa', minWidth: '16px' }} />
                  <a href={`mailto:${m.email}`} style={{ color: '#93c5fd', textDecoration: 'none' }}>
                    {m.email}
                  </a>
                </div>
                <div className="d-flex align-items-center mb-1">
                  <FaMobileAlt className="me-2" style={{ color: '#34d399', minWidth: '16px' }} />
                  <span style={{ color: '#34d399' }}>{m.phone}</span>
                </div>
                <div className="d-flex align-items-center">
                  <FaMapMarkerAlt className="me-2" style={{ color: '#f87171', minWidth: '16px' }} />
                  <span style={{ color: '#f87171' }}>{location}</span>
                </div>
              </div>
            </div>
          );
        }) : (
          <div className="text-center py-2" style={{ color: '#94a3b8' }}>No members available</div>
        )}
      </Card.Body>
    </Card>
  );
}

export default function ERTOverview({ ertStatus }) {
  const [filterZone, setFilterZone] = useState(null);
  const [showAllMembers, setShowAllMembers] = useState(false);

  const allMembers = useMemo(() => {
    const list = [];
    Object.entries(ertStatus).forEach(([role, members]) => {
      members.forEach(m => list.push({ role, ...m }));
    });
    return list;
  }, [ertStatus]);

  const floorCounts = useMemo(() => {
    const counts = { 'Podium Floor': 0, '2nd Floor': 0, 'Tower B': 0 };
    allMembers.forEach(m => {
      if (!m.present) return;
      const z = m.zone?.toLowerCase() || '';
      if (z.includes('2nd')) counts['2nd Floor']++;
      else if (z.includes('tower b')) counts['Tower B']++;
      else counts['Podium Floor']++;
    });
    return counts;
  }, [allMembers]);

  const ertLeaders = useMemo(() => {
    const raw = (ertStatus['ERT Team Leader'] || []).map(m => ({ role: 'ERT Team Leader', ...m }));
    const filtered = filterZone
      ? raw.filter(m =>
        m.present && (
          (m.zone && m.zone.includes(filterZone)) ||
          baseLocationByRole['ERT Team Leader'].includes(filterZone)
        )
      )
      : raw;

    const order = ['Vishal Chaudhari', 'Vinit Kumar', 'Sonu Pandey', 'Sagar Jamdade', 'Rangare, Bhupendra Babu', 'Satish Bhoyane'];
    return filtered.sort((a, b) => {
      const pa = a.present ? 1 : 0, pb = b.present ? 1 : 0;
      if (pa !== pb) return pb - pa;
      const ia = order.indexOf(a.name), ib = order.indexOf(b.name);
      if (ia !== -1 || ib !== -1) {
        if (ia === -1) return 1;
        if (ib === -1) return -1;
        return ia - ib;
      }
      return a.name.localeCompare(b.name);
    });
  }, [ertStatus, filterZone]);

  const ertMembers = useMemo(() => {
    const members = (ertStatus['ERT Team Members'] || []).map(m => ({
      role: 'ERT Team Members',
      name: m.Name || m.name,
      baseLocation: m['Base Location'] || m.Floor || m.zone,
      liveLocation: m.zone,
      email: m.Email || m.email,
      phone: m.Phone || m.phone,
      present: m.present
    }));

    const filtered = filterZone
      ? members.filter(m =>
        m.present && (
          (m.liveLocation && m.liveLocation.includes(filterZone)) ||
          m.baseLocation.includes(filterZone)
        )
      )
      : members;

    filtered.sort((a, b) => {
      const pa = a.present ? 1 : 0, pb = b.present ? 1 : 0;
      if (pa !== pb) return pb - pa;
      return a.name.localeCompare(b.name);
    });
    return showAllMembers ? filtered : filtered.slice(0, 8);
  }, [ertStatus, filterZone, showAllMembers]);

  const floorIcons = {
    'Podium Floor': <FaHome size={24} style={{ color: '#f87171' }} />,
    '2nd Floor': <FaBuilding size={24} style={{ color: '#60a5fa' }} />,
    'Tower B': <FaLayerGroup size={24} style={{ color: '#34d399' }} />
  };

  return (
    <div style={{ backgroundColor: '#0f172a', minHeight: '100vh', padding: '20px' }}>
      <div className="container-fluid">
        {/* Header Section */}
        {/* <div className="mb-4">
          <h2 style={{ color: '#e2e8f0', fontWeight: '700', marginBottom: '0.5rem' }}>
            Emergency Response Team Overview
          </h2>
          <p style={{ color: '#94a3b8' }}>
            Monitor the status and location of all ERT members in real-time
          </p>
        </div> */}

        {/* Filter Bar */}
        <div className="d-flex justify-content-between align-items-center mb-4">



          <Badge bg="light" text="dark" className="p-2">
            <FaEye className="me-1" />
            {Object.values(floorCounts).reduce((sum, c) => sum + c, 0)} Members Present
          </Badge>
        </div>

        {/* Stats Cards */}
        <Row className="mb-4">
          <Col xs={12} md={3} className="mb-3">
            <Card className="text-center h-100 border-0" style={{ backgroundColor: '#1e293b' }}>
              <Card.Body className="py-3">
                <FaLayerGroup size={28} style={{ color: '#60a5fa' }} className="mb-2" />
                <h5 className="mb-1" style={{ fontWeight: '500', color: '#cbd5e1' }}>Total Members</h5>
                <h2 className="m-0" style={{ color: '#e2e8f0', fontWeight: '700' }}>
                  {Object.values(floorCounts).reduce((sum, c) => sum + c, 0)}
                </h2>
              </Card.Body>
            </Card>
          </Col>

          {['Podium Floor', '2nd Floor', 'Tower B'].map(floor => {
            const count = floorCounts[floor] || 0;
            const isSelected = filterZone === floor;
            return (
              <Col key={floor} xs={12} md={3} className="mb-3">
                <Card
                  className={`text-center h-100 ${isSelected ? 'border-primary' : 'border-0'}`}
                  style={{
                    cursor: 'pointer',
                    backgroundColor: isSelected ? 'rgba(37, 99, 235, 0.2)' : '#1e293b',
                    transition: 'all 0.3s ease'
                  }}
                  onClick={() => setFilterZone(prev => prev === floor ? null : floor)}
                >
                  <Card.Body className="py-3">
                    {floorIcons[floor]}
                    <h5 className="mb-1 mt-2" style={{ fontWeight: '500', color: isSelected ? '#60a5fa' : '#cbd5e1' }}>
                      {floor}
                    </h5>
                    <h2 className="m-0" style={{ color: isSelected ? '#e2e8f0' : '#e2e8f0', fontWeight: '700' }}>
                      {count}
                    </h2>
                  </Card.Body>
                </Card>
              </Col>
            );
          })}
        </Row>

        {/* Three-column layout */}
        <Row>
          {/* LEFT COLUMN: Fixed roles */}
          <Col xs={12} lg={4} className="mb-4">
            {firstColumnRoles.map(role => renderRoleCard(role, ertStatus[role] || [], filterZone))}
          </Col>

          {/* MIDDLE COLUMN: ERT Team Leaders */}
          <Col xs={12} lg={4} className="mb-4">
            <Card className="shadow-sm mb-3" style={{ backgroundColor: '#1e293b', border: 'none', borderRadius: '12px' }}>
              <Card.Header style={{
                borderBottom: '1px solid #334155',
                fontWeight: '600',
                fontSize: '1.1rem',
                backgroundColor: 'rgba(30, 41, 59, 0.8)',
                display: 'flex',
                alignItems: 'center',
                gap: '10px',
                // padding: '1rem',
                color: '#e2e8f0'
              }}>
                {roleIcons['ERT Team Leader']}
                ERT Team Leader
              </Card.Header>
              <Card.Body style={{ padding: '1rem' }}>
                {ertLeaders.map((m, i) => {
                  const location = m.present ? m.zone || 'Unknown Zone' : baseLocationByRole['ERT Team Leader'];
                  return (
                    <div key={i} className="mb-2 pb-3" style={{ borderBottom: i < ertLeaders.length - 1 ? '1px solid #334155' : 'none' }}>

                      {/* <div className="d-flex justify-content-between align-items-center">
                        <div className="d-flex align-items-center">
                          <img 
                            src={getPhotoSrc(m)} 
                            alt={m.name || 'Member'} 
                            style={{ 
                              width: 52, 
                              height: 52, 
                              borderRadius: '50%', 
                              objectFit: 'cover', 
                              marginRight: 12,
                              border: '2px solid #475569'
                            }} 
                            onError={(e) => {
                              e.currentTarget.onerror = null;
                              e.currentTarget.src = DEFAULT_PHOTO;
                            }} 
                          />
                          <span style={{ fontWeight: '500', color: '#f1f5f9' }}>{m.name}</span>
                        </div>
                        <Badge bg={m.present ? 'success' : 'danger'} pill style={{ fontSize: '0.7rem' }}>
                          {m.present ? 'Available' : 'Away'}
                        </Badge>
                      </div> */}


                      <div className="d-flex justify-content-between align-items-center">
                        <div className="d-flex align-items-center">
                          <div style={{
                            width: 52,
                            height: 52,
                            borderRadius: '50%',
                            overflow: 'hidden',
                            marginRight: 12,
                            // border: '2px solid #475569',
                            border: m.present ? '3px solid #0df705' : '2px solid rgb(227, 230, 235)',

                            display: 'flex',
                            justifyContent: 'center',
                            alignItems: 'center'
                          }}>
                            <img
                              src={getPhotoSrc(m)}
                              alt={m.name || 'Member'}
                              style={{
                                width: '100%',
                                height: '100%',
                                objectFit: 'cover',
                                objectPosition: 'center top' // This will focus on the face area
                              }}
                              onError={(e) => {
                                e.currentTarget.onerror = null;
                                e.currentTarget.src = DEFAULT_PHOTO;
                              }}
                            />
                          </div>
                          <span style={{ fontWeight: '500', color: '#f1f5f9' }}>{m.name}</span>
                        </div>
                        <Badge bg={m.present ? 'success' : 'danger'} pill style={{ fontSize: '0.7rem' }}>
                          {m.present ? 'Available' : 'Away'}
                        </Badge>
                      </div>



                      <div className="mt-2" style={{ fontSize: '0.85rem' }}>
                        <div className="d-flex align-items-center mb-1">
                          <FaEnvelopeOpenText className="me-2" style={{ color: '#60a5fa', minWidth: '16px' }} />
                          <a href={`mailto:${m.email}`} style={{ color: '#93c5fd', textDecoration: 'none' }}>
                            {m.email}
                          </a>
                        </div>
                        <div className="d-flex align-items-center mb-1">
                          <FaMobileAlt className="me-2" style={{ color: '#34d399', minWidth: '16px' }} />
                          <span style={{ color: '#34d399' }}>{m.phone}</span>
                        </div>
                        <div className="d-flex align-items-center">
                          <FaMapMarkerAlt className="me-2" style={{ color: '#f87171', minWidth: '16px' }} />
                          <span style={{ color: '#f87171' }}>{location}</span>
                        </div>
                      </div>
                    </div>
                  );
                })}
                {!ertLeaders.length && <div className="text-center py-2" style={{ color: '#94a3b8' }}>No Team Leaders</div>}
              </Card.Body>
            </Card>
          </Col>

          {/* RIGHT COLUMN: ERT Team Members */}
          <Col xs={12} lg={4} className="mb-4">
            <Card className="shadow-sm" style={{ backgroundColor: '#1e293b', border: 'none', borderRadius: '12px' }}>
              <Card.Header style={{
                borderBottom: '1px solid #334155',
                fontWeight: '600',
                fontSize: '1.1rem',
                backgroundColor: 'rgba(30, 41, 59, 0.8)',
                display: 'flex',
                alignItems: 'center',
                gap: '10px',
                // padding: '1rem',
                color: '#e2e8f0'
              }}>
                {roleIcons['ERT Team Members']}
                ERT Team Members
              </Card.Header>
              <Card.Body style={{ padding: '1rem' }}>
                {ertMembers.map((m, i) => {
                  const location = m.present ? m.liveLocation || 'Unknown Zone' : m.baseLocation;
                  return (
                    <div key={i} className="mb-2 pb-2" style={{ borderBottom: i < ertMembers.length - 1 ? '1px solid #334155' : 'none' }}>

                      {/* <div className="d-flex justify-content-between align-items-center">
                        <div className="d-flex align-items-center">
                          <img 
                            src={getPhotoSrc(m)} 
                            alt={m.name || 'Member'} 
                            style={{ 
                              width: 52, 
                              height: 52, 
                              borderRadius: '50%', 
                              objectFit: 'cover', 
                              marginRight: 12,
                              border: '1px solid #475569'
                            }} 
                            onError={(e) => {
                              e.currentTarget.onerror = null;
                              e.currentTarget.src = DEFAULT_PHOTO;
                            }} 
                          />
                          <span style={{ fontWeight: '500', color: '#f1f5f9' }}>{m.name}</span>
                        </div>
                        <Badge bg={m.present ? 'success' : 'danger'} pill style={{ fontSize: '0.7rem' }}>
                          {m.present ? 'Available' : 'Away'}
                        </Badge>
                      </div> */}

                      <div className="d-flex justify-content-between align-items-center">
                        <div className="d-flex align-items-center">
                          <div style={{
                            width: 52,
                            height: 52,
                            borderRadius: '50%',
                            overflow: 'hidden',
                            marginRight: 12,
                            // border: '2px solid #475569',
                            border: m.present ? '3px solid #0df705' : '2px solid rgb(227, 230, 235)',
                            display: 'flex',
                            justifyContent: 'center',
                            alignItems: 'center'
                          }}>
                            <img
                              src={getPhotoSrc(m)}
                              alt={m.name || 'Member'}
                              style={{
                                width: '100%',
                                height: '100%',
                                objectFit: 'cover',
                                objectPosition: 'center top' // This will focus on the face area
                              }}
                              onError={(e) => {
                                e.currentTarget.onerror = null;
                                e.currentTarget.src = DEFAULT_PHOTO;
                              }}
                            />
                          </div>
                          <span style={{ fontWeight: '500', color: '#f1f5f9' }}>{m.name}</span>
                        </div>
                        <Badge bg={m.present ? 'success' : 'danger'} pill style={{ fontSize: '0.7rem' }}>
                          {m.present ? 'Available' : 'Away'}
                        </Badge>
                      </div>


                      <div className="mt-2" style={{ fontSize: '0.85rem' }}>
                        <div className="d-flex align-items-center mb-1">
                          <FaEnvelopeOpenText className="me-2" style={{ color: '#60a5fa', minWidth: '16px' }} />
                          <a href={`mailto:${m.email}`} style={{ color: '#93c5fd', textDecoration: 'none' }}>
                            {m.email}
                          </a>
                        </div>
                        <div className="d-flex align-items-center mb-1">
                          <FaMobileAlt className="me-2" style={{ color: '#34d399', minWidth: '16px' }} />
                          <span style={{ color: '#34d399' }}>{m.phone}</span>
                        </div>
                        <div className="d-flex align-items-center">
                          <FaMapMarkerAlt className="me-2" style={{ color: '#f87171', minWidth: '16px' }} />
                          <span style={{ color: '#f87171' }}>{location}</span>
                        </div>
                      </div>
                    </div>
                  );
                })}
                {!ertMembers.length && <div className="text-center py-2" style={{ color: '#94a3b8' }}>No members</div>}
                <div className="text-center mt-3">
                  <Button
                    variant="outline-primary"
                    size="sm"
                    onClick={() => setShowAllMembers(prev => !prev)}
                    style={{ minWidth: '120px' }}
                  >
                    {showAllMembers ? <><FaEyeSlash className="me-1" /> Show Less</> : <><FaEye className="me-1" /> Show More</>}
                  </Button>
                </div>
              </Card.Body>
            </Card>
          </Col>
        </Row>
        
      </div>
    </div>
  );
}
