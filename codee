-  useEffect(() => {
-    const es = new EventSource('http://localhost:5000/api/live-occupancy');
-    ...
-    return () => es.close();
-  }, []);
+  useEffect(() => {
+    // If we're time-traveling, do not connect SSE
+    if (timeTravelMode) return;
+
+    const es = new EventSource('http://localhost:5000/api/live-occupancy');
+    es.onmessage = (e) => {
+      try {
+        const p = JSON.parse(e.data);
+        setLiveData({
+          summary: Array.isArray(p.summary) ? p.summary : [],
+          details: p.details || {},
+          floorBreakdown: Array.isArray(p.floorBreakdown) ? p.floorBreakdown : [],
+          zoneBreakdown: Array.isArray(p.zoneBreakdown) ? p.zoneBreakdown : [],
+          personnelBreakdown: Array.isArray(p.personnelBreakdown) ? p.personnelBreakdown : [],
+          totalVisitedToday: typeof p.totalVisitedToday === 'number' ? p.totalVisitedToday : 0,
+          personnelSummary: p.personnelSummary || { employees: 0, contractors: 0 },
+          visitedToday: p.visitedToday || { employees: 0, contractors: 0, total: 0 },
+          ertStatus: p.ertStatus || {}
+        });
+      } catch {
+        console.error('SSE parse error');
+      }
+    };
+
+    es.onerror = (err) => {
+      console.error('SSE error', err);
+      try { es.close(); } catch (e) {}
+    };
+
+    return () => {
+      try { es.close(); } catch (e) {}
+    };
+  }, [timeTravelMode]);