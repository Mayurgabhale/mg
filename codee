// REPLACE your existing CurveOverlay/InfographicCurve with this simplified version
const CurveOverlay = ({ width, height, xAxisMap, yAxisMap }) => {
  const xKey = Object.keys(xAxisMap || {})[0];
  const yKey = Object.keys(yAxisMap || {})[0];

  if (!xKey || !yKey) return null;

  const xScale = xAxisMap[xKey].scale;
  const yScale = yAxisMap[yKey].scale;

  const points = chartData.map((d) => {
    const x = xScale(d.floor) + (xScale.bandwidth ? xScale.bandwidth() / 2 : 0);
    const y = yScale(d.liveCount);
    return { x, y };
  });

  if (points.length < 2) return null;

  // build smooth path
  let path = `M ${points[0].x} ${points[0].y}`;
  for (let i = 1; i < points.length; i++) {
    const prev = points[i - 1];
    const cur = points[i];
    const midX = (prev.x + cur.x) / 2;
    const midY = (prev.y + cur.y) / 2;
    path += ` Q ${prev.x} ${prev.y} ${midX} ${midY}`;
  }
  const last = points[points.length - 1];
  path += ` T ${last.x} ${last.y}`;

  return (
    <g>
      {/* faint grey helper line */}
      <path d={path} fill="none" stroke="#cccccc" strokeWidth={2} strokeOpacity={0.6} />
      {/* bright accent line on top */}
      <path d={path} fill="none" stroke="#FFD100" strokeWidth={3} strokeOpacity={0.9} strokeLinecap="round" />
    </g>
  );
};


...


// REPLACE CylinderShape with this
const CylinderShape = (props) => {
  const { x, y, width, height, payload } = props;
  const floorName = payload && payload.floor;
  const idx = chartData.findIndex(d => d.floor === floorName);
  const fill = `url(#cyl-grad-${idx})`;

  const cx = x + width / 2;
  const topRy = Math.max(8, width * 0.12);
  const bottomRy = Math.max(10, width * 0.14);
  const bottomY = y + height;

  // centered label (live/cap) â€” large and bold
  const centerLabel = payload && payload.label ? payload.label : '';

  return (
    <g>
      {/* shadow under the cylinder */}
      <ellipse
        cx={cx}
        cy={bottomY + bottomRy * 0.9}
        rx={width * 0.62}
        ry={bottomRy * 0.45}
        fill="rgba(0,0,0,0.25)"
      />

      {/* cylinder body */}
      <rect
        x={x}
        y={y}
        width={width}
        height={height}
        rx={12}
        ry={12}
        fill={fill}
        stroke="rgba(255,255,255,0.06)"
        strokeWidth={1}
      />

      {/* top ellipse */}
      <ellipse
        cx={cx}
        cy={y}
        rx={width / 2}
        ry={topRy}
        fill={fill}
        stroke="rgba(255,255,255,0.12)"
        strokeWidth={1}
      />

      {/* bottom ellipse for 3D look */}
      <ellipse
        cx={cx}
        cy={bottomY}
        rx={width / 2}
        ry={bottomRy}
        fill="rgba(255,255,255,0.03)"
      />

      {/* big centered count (live/cap) */}
      {centerLabel && (
        <text
          x={cx}
          // vertically center: use middle of cylinder body
          y={y + height / 2 + 8} 
          textAnchor="middle"
          fontSize={Math.max(16, Math.round(width * 0.18))}
          fontWeight="800"
          fill="#ffffff"
        >
          {centerLabel}
        </text>
      )}
    </g>
  );
};