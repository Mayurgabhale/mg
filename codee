// format API time string (HH:mm:ss from ISO) into 12h with AM/PM
const getApiTime12 = (iso, fallback) => {
  const raw = iso
    ? iso.slice(11, 19) // HH:mm:ss
    : (fallback || '');
  if (!raw) return '';

  // parse HH, mm, ss
  const [hh, mm, ss] = raw.split(':').map(Number);
  const hours12 = ((hh + 11) % 12) + 1; // convert to 1â€“12
  const ampm = hh >= 12 ? 'PM' : 'AM';
  return `${hours12.toString().padStart(2,'0')}:${mm
    .toString()
    .padStart(2,'0')}:${ss.toString().padStart(2,'0')} ${ampm}`;
};






.....




<TableCell sx={{ color:'#fff', border:'1px solid #FFC107' }}>
  {getApiTime12(r.LocaleMessageTime, r.Swipe_Time)}
</TableCell>




......



<DataTable
  columns={columns}
  rows={(floorMap[expandedFloor]||[]).map(r => ({
    ...r,
    LocaleMessageTime: getApiTime12(r.LocaleMessageTime, r.Swipe_Time)
  }))}
/>