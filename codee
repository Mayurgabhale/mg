// C:\Users\W0024618\Desktop\swipeData\client\src\components\PersonnelDonutChart.jsx
import React from "react";
import { Card } from "react-bootstrap";
import {
  FaUserTie,
  FaUserShield,
  FaUserCog,
  FaUserClock,
  FaUserFriends,
  FaUserTimes,
} from "react-icons/fa";
import "./PersonnelDonutChart.css"; // Responsive + 3D styles

// Brand colors (vibrant, 3D friendly)
const COLORS = {
  Employee: "linear-gradient(135deg, #32CD32, #228B22)",
  Visitor: "linear-gradient(135deg, #FF6F61, #CC3A30)",
  Contractor: "linear-gradient(135deg, #1E90FF, #0066CC)",
  "Property Management": "linear-gradient(135deg, #FFD700, #E6AC00)",
  "Temp Badge": "linear-gradient(135deg, #8A2BE2, #551A8B)",
  "Terminated Personnel": "linear-gradient(135deg,rgb(233, 35, 190),rgb(179, 40, 229))",
};

// Icon mapping
const ICONS = {
  Employee: <FaUserTie />,
  Visitor: <FaUserFriends />,
  Contractor: <FaUserCog />,
  "Property Management": <FaUserShield />,
  "Temp Badge": <FaUserClock />,
  "Terminated Personnel": <FaUserTimes />,
};

export default function PersonnelPeopleGrid({ data = [] }) {
  const total = data.reduce((sum, e) => sum + e.count, 0);

  if (!data.length || total === 0) {
    return (
      <Card body className="bg-dark text-white p-4 text-center">
        No personnel data available
      </Card>
    );
  }

  // ✅ Sort data by count (largest first)
  const sorted = [...data].sort((a, b) => b.count - a.count);

  return (
    <Card className="mb-4 shadow-lg border personnel-card">
      <Card.Header
        className="bg-dark text-warning text-center fw-bold personnel-header"
        style={{ borderBottom: "2px solid var(--wu-yellow)" }}
      >
        <h5 className="mb-0">Personnel Type Headcount</h5>
      </Card.Header>

      <Card.Body className="personnel-body bg-dark">
        {sorted.map((item) => (
          <div
            key={item.personnelType}
            className="personnel-block"
            style={{ background: COLORS[item.personnelType] }}
          >
            <div className="personnel-icon">{ICONS[item.personnelType]}</div>
            <div className="personnel-type">{item.personnelType}</div>
            <div className="personnel-count">{item.count}</div>
          </div>
        ))}
      </Card.Body>
    </Card>
  );
}





......


/* --- Card wrapper --- */
.personnel-card {
  width: 100%;
  overflow: hidden;
}

/* Header scales with screen size */
.personnel-header h5 {
  font-size: clamp(1rem, 1.2vw, 1.4rem);
  margin: 0;
}

/* --- Card body (responsive container) --- */
.personnel-body {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  background: #111;
  gap: 1.5rem;
  padding: 2rem;
  min-height: 400px;
}

/* --- Personnel block (default: laptop/desktop) --- */
.personnel-block {
  flex: 1 1 180px;
  max-width: 220px;
  aspect-ratio: 1 / 1;
  border-radius: 1.2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: 900;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.35);
  transition: transform 0.25s ease, box-shadow 0.25s ease;
  margin: 6px;
}

.personnel-block:hover {
  transform: translateY(-8px) scale(1.05);
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.5);
}

/* Icon + text inside each block */
.personnel-icon {
  font-size: 2rem;
  margin-bottom: 0.5rem;
  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.4));
}

.personnel-type {
  font-size: 1rem;
  margin-bottom: 0.3rem;
  text-align: center;
  text-shadow: 0px 1px 3px rgba(0, 0, 0, 0.6);
}

.personnel-count {
  font-size: 1.4rem;
  font-weight: bold;
  text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.7);
}

/* ---------- Breakpoints ---------- */

/* Mobile (<576px) */
@media (max-width: 575.98px) {
  .personnel-body {
    padding: 0.75rem;
    gap: 0.75rem;
    min-height: auto;
  }
  .personnel-block {
    flex: 1 1 120px;
    max-width: 140px;
  }
  .personnel-icon { font-size: 1.4rem; }
  .personnel-type { font-size: 0.8rem; }
  .personnel-count { font-size: 1rem; }
}

/* Tablet (576px–767px) */
@media (min-width: 576px) and (max-width: 767.98px) {
  .personnel-body {
    padding: 1.25rem;
    gap: 1rem;
    min-height: 320px;
  }
  .personnel-block {
    flex: 1 1 140px;
    max-width: 160px;
  }
  .personnel-icon { font-size: 1.6rem; }
  .personnel-count { font-size: 1.1rem; }
}

/* Small laptop (768px–991px) */
@media (min-width: 768px) and (max-width: 991.98px) {
  .personnel-body {
    padding: 1.75rem;
    gap: 1.25rem;
    min-height: 360px;
  }
  .personnel-block {
    flex: 1 1 160px;
    max-width: 180px;
  }
  .personnel-icon { font-size: 1.8rem; }
  .personnel-count { font-size: 1.2rem; }
}

/* Desktop (≥1200px) */
@media (min-width: 1200px) {
  .personnel-body {
    padding: 3rem;
    gap: 2rem;
    min-height: 450px;
  }
  .personnel-block {
    flex: 1 1 200px;
    max-width: 240px;
  }
  .personnel-icon { font-size: 2.2rem; }
  .personnel-count { font-size: 1.5rem; }
}