know time is select correct all things are correct 

Viewing historical snapshot for: 10/09/2025, 11:00 pm (IST) this is correct

when i selct date fromt this date is getting above this is correct but in date slect box show differetn time. i want to show this  11:00 pm.. But in select box show this 09/10/2025 05:33 PM
<InputGroup>
        <FormControl
          type="datetime-local"
          value={local}
          onChange={(e) => setLocal(e.target.value)}
          placeholder="Select date & time"
        />
      </InputGroup>



// src/components/TimeTravelControl.jsx
import React, { useEffect, useState } from 'react';
import { Button, InputGroup, FormControl, Spinner } from 'react-bootstrap';

/**
 * TimeTravelControl
 * - shows a "YYYY-MM-DDTHH:mm" input that is treated literally as UTC
 * - when Apply clicked -> sends "<local-value>:00.000Z" (no timezone conversion)
 * - keeps input in sync with parent-provided currentTimestamp (ISO)
 */
export default function TimeTravelControl({ currentTimestamp, onApply, onLive, loading }) {
  // store local value as "YYYY-MM-DDTHH:mm" (no timezone)
  const [local, setLocal] = useState(currentTimestamp ? isoToInput(currentTimestamp) : '');

  // sync when parent changes currentTimestamp
  useEffect(() => {
    if (currentTimestamp) setLocal(isoToInput(currentTimestamp));
    else setLocal('');
  }, [currentTimestamp]);

  function handleApply() {
    if (!local) return;
    // Do NOT interpret `local` as local-time; treat it literally as UTC
    // Build an ISO that corresponds exactly to the displayed value:
    // "YYYY-MM-DDTHH:mm" -> "YYYY-MM-DDTHH:mm:00.000Z"
    // const iso = `${local}:00.000Z`;
    // onApply(iso);


    // new â€” interpret the input as local browser time, convert to UTC ISO
   const iso = new Date(`${local}:00`).toISOString();
onApply(iso);
  }

  function handleLive() {
    setLocal('');
    onLive();
  }

  return (
    <div style={{ display: 'flex', gap: 8, alignItems: 'center', minWidth: 340 }}>
      <InputGroup>
        <FormControl
          type="datetime-local"
          value={local}
          onChange={(e) => setLocal(e.target.value)}
          placeholder="Select date & time"
        />
      </InputGroup>

      <div style={{ display: 'flex', gap: 6 }}>
        <Button variant="outline-warning" onClick={handleApply} disabled={loading || !local}>
          {loading ? <><Spinner animation="border" size="sm" />&nbsp;Applying</> : 'Apply'}
        </Button>
        <Button variant="warning" onClick={handleLive} disabled={loading}>
          Live
        </Button>
      </div>
    </div>
  );
}

/** helpers **/

function pad(n) { return String(n).padStart(2, '0'); }

/**
 * Convert an ISO timestamp (UTC) into a "YYYY-MM-DDTHH:mm" string for the input.
 * IMPORTANT: uses UTC getters so the text shown matches the ISO exactly (no timezone shift).
 */
function isoToInput(iso) {
  if (!iso) return '';
  const d = new Date(iso);
  const year = d.getUTCFullYear();
  const month = pad(d.getUTCMonth() + 1);
  const day = pad(d.getUTCDate());
  const hours = pad(d.getUTCHours());
  const minutes = pad(d.getUTCMinutes());
  return `${year}-${month}-${day}T${hours}:${minutes}`;
}
