
  const detailRows = useMemo(() => {
    if (!data || !pickedDate) return [];
    const ds = format(pickedDate, 'yyyy-MM-dd');



    // a) all swipes that day for our partitions
    const all = data.details.filter(r =>
      filteredPartitionKeys.includes(r.PartitionName2) &&
      // format(new Date(r.LocaleMessageTime), 'yyyy-MM-dd') === ds
      r.LocaleMessageTime.startsWith(ds)
    );

    // b) oldest → newest
    all.sort((a, b) =>
      new Date(a.LocaleMessageTime) - new Date(b.LocaleMessageTime)
    );

    // c) last swipe per person
    const lastByPerson = {};
    all.forEach(r => { lastByPerson[r.PersonGUID] = r; });

    // d) only those whose final swipe was an entry
    // return Object.values(lastByPerson).filter(r => r.Direction === 'InDirection');
    return Object.values(lastByPerson);
  }, [data, pickedDate, filteredPartitionKeys]);





this above is correct working code,

know we crate new some futur but in new getting couunt differecne
actuca count is 558
in details show only 544 

chekc above and correcy the belwo code, carefully, 

and this is new the problme in this code

  const detailRows = useMemo(() => {
    if (!data || !pickedDate) return [];
    const ds = format(pickedDate, 'yyyy-MM-dd');

    // a) all swipes that day for our partitions
    const all = data.details.filter(r =>
      filteredPartitionKeys.includes(r.PartitionName2) &&
      r.LocaleMessageTime && r.LocaleMessageTime.startsWith(ds)
    );

    // b) oldest → newest
    all.sort((a, b) => new Date(a.LocaleMessageTime) - new Date(b.LocaleMessageTime));

    // c) keep last swipe per person
    const lastByPerson = {};
    all.forEach(r => { lastByPerson[r.PersonGUID] = r; });

    // d) values (final swipe entries) and only InDirection (still inside)
    let rows = Object.values(lastByPerson).filter(r => r.Direction === 'InDirection');

    // Attach computed company for display / filtering / export
    rows = rows.map(r => ({ ...r, CompanyNameComputed: getCanonicalCompany(r) }));

    // If a company row was clicked, do the strict triple match (Country||City||Company)
    if (selectedCompany) {
      const [selCountry, selCity, selCompanyRaw] = selectedCompany.split('||');
      const selCompanyNorm = String(selCompanyRaw || '').replace(/\s+/g, ' ').trim().toLowerCase();

      rows = rows.filter(r => {
        const rnCompany = String(r.CompanyNameComputed || 'Unknown').replace(/\s+/g, ' ').trim().toLowerCase();
        const rowCity = partitionToDisplay[r.PartitionName2]?.city || r.PartitionName2 || '';
        const rowCountry = partitionToDisplay[r.PartitionName2]?.country || 'Unknown';
        return rnCompany === selCompanyNorm && rowCity === selCity && rowCountry === selCountry;
      });
    }

    return rows;
  }, [data, pickedDate, filteredPartitionKeys, selectedCompany]);


