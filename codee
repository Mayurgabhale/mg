import React, { useMemo } from 'react';
import { Container, Row, Col } from 'react-bootstrap';

import SummaryCards        from '../components/SummaryCards';
import FloorOccupancyChart from '../components/FloorOccupancyChart';
import SummaryChart        from '../components/SummaryChart';
import PersonnelDonutChart from '../components/PersonnelDonutChart';
import LoadingSpinner      from '../components/LoadingSpinner';

function DashboardHome({
  summaryData,
  detailsData,
  floorData,
  zoneBreakdown,
  personnelBreakdown,
  totalVisitedToday,
  personnelSummary,
  visitedToday,
  ertStatus
}) {
  const employees      = personnelSummary?.employees   ?? 0;
  const contractors    = personnelSummary?.contractors ?? 0;
  const totalOccupancy = employees + contractors;

  // Memoize donut-chart data so it only recalculates when personnelBreakdown changes
  const chartData = useMemo(
    () =>
      (personnelBreakdown || []).map(({ personnelType, count }) => ({
        personnelType,
        count,
      })),
    [personnelBreakdown]
  );

  // ✅ Loading condition
  const isLoading =
    (!summaryData || summaryData.length === 0) &&
    (!floorData || floorData.length === 0) &&
    (!personnelBreakdown || personnelBreakdown.length === 0);

  if (isLoading) {
    return <LoadingSpinner message="Loading dashboard..." />;
  }

  return (
    <Container fluid className="py-4">
      <SummaryCards
        totalOccupancy={totalOccupancy}
        employeeCount={employees}
        contractorCount={contractors}
        totalVisitedToday={totalVisitedToday}
        employeesVisitedToday={visitedToday?.employees ?? 0}
        contractorsVisitedToday={visitedToday?.contractors ?? 0}
      />

      <Row className="g-4">
        <Col md={4} style={{ minHeight: 300 }}>
          <FloorOccupancyChart data={floorData} />
        </Col>

        <Col md={4} style={{ minHeight: 300 }}>
          <SummaryChart summary={summaryData} />
        </Col>

        <Col md={4} style={{ minHeight: 300 }}>
          <PersonnelDonutChart data={chartData} />
        </Col>
      </Row>

      <footer
        style={{
          backgroundColor: '#000',
          color: '#FFC72C',
          padding: '1.5rem 0',
          textAlign: 'center',
          marginTop: '0rem',
          borderTop: '2px solid #FFC72C',
          fontSize: '0.95rem',
          lineHeight: '1.6',
          minHeight: 120, // reserve space to reduce CLS
        }}
      >
        <div>
          <strong>Global Security Operations Center</strong>
          <br />
          Live HeadCount against Occupancy dashboard for Western Union Pune — Real-time
          occupancy, floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us:&nbsp;
          <a
            href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com"
            style={{ color: '#FFC72C', textDecoration: 'underline' }}
          >
            GSOC Mail
          </a>
          &nbsp;|&nbsp; Landline:&nbsp;
          <span style={{ color: '#FFC72C' }}>+91-020-67632394</span>
        </div>
      </footer>
    </Container>
  );
}

// Memoize whole page so it only re-renders when its props actually change
export default React.memo(DashboardHome);