// --- Vendor / Camera filter (populate existing #vendorFilter or create fallback) ---
let vendorFilter = document.getElementById("vendorFilter");
if (!vendorFilter) {
    // fallback: create and insert before cityFilter (only if your HTML doesn't already have it)
    vendorFilter = document.createElement("select");
    vendorFilter.id = "vendorFilter";
    vendorFilter.style.marginTop = "8px";
    deviceFilter.parentNode.insertBefore(vendorFilter, cityFilter);
}

// populate vendor options (clear previous and ensure 'All camera' first)
vendorFilter.innerHTML = `<option value="all">All camera</option>`;
[...vendorSet].sort().forEach(v => {
    if (!v) return; // skip empty
    const opt = document.createElement("option");
    opt.value = v;       // normalized uppercase key
    opt.textContent = v; // display (e.g. FLIR, VERKADA)
    vendorFilter.appendChild(opt);
});

// hide by default unless cameras selected
vendorFilter.style.display = (deviceFilter.value === "cameras") ? "block" : "none";

// avoid duplicate listeners on repeated updates
vendorFilter.onchange = filterDevices;






......

const vendorFilterElem = document.getElementById("vendorFilter");
const selectedVendor = vendorFilterElem ? vendorFilterElem.value : "all";

