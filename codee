  const query = `
WITH CombinedQuery AS (
  SELECT
    DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
    t1.ObjectName1      AS ObjectName1,
     t1.ObjectName2      AS Door,                -- ← ADD THIS LINE
    t1.PartitionName2   AS PartitionName2,
    COALESCE(
      TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]','varchar(50)'),
      TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]','varchar(50)'),
      sc.value
    )                    AS CardNumber,
    t3.Name              AS PersonnelType,
    t5_rej.value         AS RejectionType
  FROM [ACVSUJournal_00010029].[dbo].[ACVSUJournalLog] AS t1
  LEFT JOIN [ACVSCore].[Access].[Personnel] AS t2
    ON t1.ObjectIdentity1 = t2.GUID
  LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3
    ON t2.PersonnelTypeId = t3.ObjectID
  LEFT JOIN [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxml] AS t_xml
    ON t1.XmlGUID = t_xml.GUID
  LEFT JOIN (
    SELECT GUID, value
    FROM [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxmlShred]
    WHERE Name IN ('Card','CHUID')
  ) AS sc
    ON t1.XmlGUID = sc.GUID
  LEFT JOIN [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxmlShred] AS t5_rej
    ON t1.XmlGUID = t5_rej.GUID AND t5_rej.Name = 'RejectCode'
  WHERE
    t1.MessageType = 'CardRejected'
    AND t1.PartitionName2 IN (${parts})
    AND CONVERT(DATE,
         DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
        ) >= DATEADD(DAY, -7, CONVERT(DATE, GETDATE()))
)

SELECT
  LocaleMessageTime,
  CONVERT(date, LocaleMessageTime)    AS DateOnly,
  CONVERT(time(0), LocaleMessageTime) AS SwipeTime,
  CardNumber,
  PersonnelType,
  PartitionName2                     AS Location,
  Door,
  RejectionType
FROM CombinedQuery
ORDER BY LocaleMessageTime DESC;
  `;

add above queruy 
not this

const sql = require("mssql");
const dbConfig = require("../config/db");  // ✅ fixed path

async function getRejections(req, res) {
  try {
    let pool = await sql.connect(dbConfig);

    const result = await pool.request().query(`
      WITH CombinedQuery AS (
        SELECT
          DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
          t1.ObjectName2 AS Door,
          t1.PartitionName2 AS PartitionName2,
          t5_rej.value AS RejectionType
        FROM [ACVSUJournal_00010029].[dbo].[ACVSUJournalLog] AS t1
        LEFT JOIN [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxml] AS t_xml
          ON t1.XmlGUID = t_xml.GUID
        LEFT JOIN [ACVSUJournal_00010029].[dbo].[ACVSUJournalLogxmlShred] AS t5_rej
          ON t1.XmlGUID = t5_rej.GUID AND t5_rej.Name = 'RejectCode'
        WHERE
          t1.MessageType = 'CardRejected'
          AND CONVERT(DATE,
               DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
              ) >= DATEADD(DAY, -7, CONVERT(DATE, GETDATE()))
      )
      SELECT
        PartitionName2 AS floor,
        COUNT(*) AS rejectionCount
      FROM CombinedQuery
      GROUP BY PartitionName2
      ORDER BY floor;
    `);

    res.json(result.recordset);
  } catch (err) {
    console.error("Error fetching rejection data:", err);
    res.status(500).send("Server Error");
  }
}

module.exports = { getRejections }

