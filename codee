// helper: compute canonical company for a single detail row (same logic used by companyRows)
const getCanonicalCompany = (r) => {
  const rawCompany = (r.CompanyName || '').toString().trim();
  const pt = (r.PersonnelType || '').toString().trim().toLowerCase();
  const s = rawCompany.toLowerCase();

  // If CompanyName contains CBRE and also mention of CLR or Facility -> CLR canonical
  if (s && /\bcbre\b/.test(s) && (/\bclr\b/.test(s) || /\bfacilit/i.test(s))) {
    return 'CLR Facility Services Pvt.Ltd.';
  }

  // If CompanyName is explicitly CBRE (or normalizes to CBRE)
  // and PersonnelType indicates Property Management -> map to CLR Facility Services
  if (s && (s === 'cbre' || normalizeCompany(rawCompany) === 'CBRE')) {
    if (pt.includes('property') || pt.includes('management') || pt === 'property management') {
      // NEW: map CBRE + Property Management -> CLR Facility Services (single canonical)
      return 'CLR Facility Services Pvt.Ltd.';
    }
    // otherwise keep as CBRE
    return 'CBRE';
  }

  // If CompanyName is blank -> use PersonnelType fallback rules
  if (!rawCompany) {
    if (pt.includes('contractor')) return 'CBRE';
    if (pt.includes('property') || pt.includes('management') || pt === 'property management') {
      // blank company but property-management -> CLR Facility Services (same canonical)
      return 'CLR Facility Services Pvt.Ltd.';
    }
    if (pt === 'employee') return 'Western Union';
    if (pt.includes('visitor')) return 'Visitor';
    if (pt.includes('temp')) return 'Temp Badge';
    return 'Unknown';
  }

  // otherwise use normalizeCompany for other families
  return normalizeCompany(rawCompany);
};