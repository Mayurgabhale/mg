// NEW: personnel header filter state (EMEA)
const [selectedPersonnel, setSelectedPersonnel] = useState(null); // 'Employee' | 'Contractor' | null
const [selectedSummaryPartition, setSelectedSummaryPartition] = useState(null); // e.g. 'Austria||Vienna'




......

{/* Summary header (clickable Employees / Contractors) */}
<TableRow sx={{ bgcolor: '#FFC107' }}>
  {['Country','City','Employees','Contractors','Total'].map(h => {
    if (h === 'Employees' || h === 'Contractors') {
      const personnelType = h === 'Employees' ? 'Employee' : 'Contractor';
      const isActive = selectedPersonnel === personnelType && !selectedSummaryPartition;
      return (
        <TableCell
          key={h}
          align="right"
          onClick={() => {
            if (isActive) {
              setSelectedPersonnel(null);
            } else {
              setSelectedPersonnel(personnelType);
              setSelectedSummaryPartition(null);
              setSelectedCompany(null);
              setShowDetails(true);
            }
          }}
          sx={{
            color: isActive ? '#fff' : '#000',
            fontWeight: 'bold',
            fontSize: 14,
            border: '2px solid #000',
            cursor: 'pointer',
            textAlign: 'right',
            bgcolor: isActive ? '#474747' : '#FFC107',
            '&:hover': { backgroundColor: isActive ? '#5a5a5a' : '#f2f2f2' }
          }}
        >
          {h}
        </TableCell>
      );
    }
    return (
      <TableCell
        key={h}
        align={['Country','City'].includes(h) ? 'left' : 'right'}
        sx={{ color: '#000', fontWeight: 'bold', fontSize: 14, border: '2px solid #000' }}
      >
        {h}
      </TableCell>
    );
  })}
</TableRow>

{/* Summary rows (make Employee/Contractor cells clickable to filter that partition + personnel) */}
{partitionRows.map((r, i) => {
  const partitionKey = `${r.country}||${r.city}`;
  return (
    <TableRow key={i}>
      <TableCell sx={{ border: '2px solid #000' }}>{r.country}</TableCell>
      <TableCell sx={{ border: '2px solid #000' }}>{r.city}</TableCell>

      {/* Employee count cell (click -> filter partition to Employees) */}
      <TableCell
        align="right"
        sx={{
          border: '2px solid #000',
          cursor: 'pointer',
          '&:hover': { backgroundColor: '#f2f2f2' },
          bgcolor: selectedPersonnel === 'Employee' && selectedSummaryPartition === partitionKey ? '#474747' : undefined,
          color: selectedPersonnel === 'Employee' && selectedSummaryPartition === partitionKey ? '#fff' : '#000'
        }}
        onClick={() => {
          if (selectedPersonnel === 'Employee' && selectedSummaryPartition === partitionKey) {
            setSelectedPersonnel(null);
            setSelectedSummaryPartition(null);
          } else {
            setSelectedPersonnel('Employee');
            setSelectedSummaryPartition(partitionKey);
            setSelectedCompany(null);
            setShowDetails(true);
          }
        }}
      >
        {r.employee}
      </TableCell>

      {/* Contractor count cell (click -> filter partition to Contractors) */}
      <TableCell
        align="right"
        sx={{
          border: '2px solid #000',
          cursor: 'pointer',
          '&:hover': { backgroundColor: '#f2f2f2' },
          bgcolor: selectedPersonnel === 'Contractor' && selectedSummaryPartition === partitionKey ? '#474747' : undefined,
          color: selectedPersonnel === 'Contractor' && selectedSummaryPartition === partitionKey ? '#fff' : '#000'
        }}
        onClick={() => {
          if (selectedPersonnel === 'Contractor' && selectedSummaryPartition === partitionKey) {
            setSelectedPersonnel(null);
            setSelectedSummaryPartition(null);
          } else {
            setSelectedPersonnel('Contractor');
            setSelectedSummaryPartition(partitionKey);
            setSelectedCompany(null);
            setShowDetails(true);
          }
        }}
      >
        {r.contractor}
      </TableCell>

      <TableCell align="right" sx={{ bgcolor: '#FFC107', fontWeight: 'bold', border: '2px solid #000' }}>
        {r.total}
      </TableCell>
    </TableRow>
  );
})}