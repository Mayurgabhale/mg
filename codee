const finalList = relevantEvents; // includes IN + OUT



......
// After computing `visited`...
const visitedOccupants = relevantEvents
  .filter(e => eventDtFor(e) && eventDtFor(e) <= refDt)
  .reduce((map, e) => {
    const key = personKey(e);
    if (!map.has(key)) map.set(key, e); // keep first event for identity
    return map;
  }, new Map());

...
return {
  asOfLocal,
  asOfUTC,
  currentCount: finalList.length,
  floorBreakdown,
  personnelSummary: { employees, contractors },
  personnelBreakdown,
  totalVisitedToday: visited.total,
  visitedToday: {
    employees: visited.employees,
    contractors: visited.contractors,
    total: visited.total
  },
  visitedOccupants: Array.from(visitedOccupants.values()),  // ðŸ‘ˆ new full list
  swipeStats: { totalInSwipes, totalOutSwipes },
  floorInOutSummary
};
