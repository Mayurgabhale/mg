<Box display="flex" justifyContent="space-between" alignItems="center" mb={1}>
  <Typography variant="subtitle1" gutterBottom sx={{ fontWeight: 'bold' }}>
    {floor} (Total {emps.length})
  </Typography>
  <Button
    size="small"
    variant="contained"
    onClick={() => exportToExcel(floor, emps)}
  >
    Export
  </Button>
</Box>




.....



import * as XLSX from 'xlsx';

// helper export function
const exportToExcel = (floor, data) => {
  const wsData = [
    ["Sr No", "ID", "Name", "Time", "Type", "CompanyName", "Card", "Door"], // headers
    ...data.map((r, i) => [
      i + 1,
      r.EmployeeID,
      r.ObjectName1,
      new Date(r.LocaleMessageTime).toLocaleTimeString(),
      r.PersonnelType,
      r.CompanyName,
      r.CardNumber,
      r.Door
    ])
  ];

  const ws = XLSX.utils.aoa_to_sheet(wsData);

  // style borders & header color
  const range = XLSX.utils.decode_range(ws['!ref']);
  for (let R = range.s.r; R <= range.e.r; ++R) {
    for (let C = range.s.c; C <= range.e.c; ++C) {
      const cellRef = XLSX.utils.encode_cell({ r: R, c: C });
      if (!ws[cellRef]) continue;

      ws[cellRef].s = {
        border: {
          top: { style: "thin", color: { rgb: "000000" } },
          bottom: { style: "thin", color: { rgb: "000000" } },
          left: { style: "thin", color: { rgb: "000000" } },
          right: { style: "thin", color: { rgb: "000000" } }
        },
        fill: R === 0 ? { fgColor: { rgb: "FFD966" } } : {}, // header bg color
        font: { bold: R === 0 }
      };
    }
  }

  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, "Data");
  XLSX.writeFile(wb, `${floor}_entries.xlsx`);
};
