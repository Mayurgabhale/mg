Compiled with problems:
×
ERROR in ./src/components/EmployeeCard.jsx 583:39-54
export 'default' (imported as 'CurrentLocation') was not found in './CurrentLocation' (module has no exports)


mport React, { useEffect, useState } from 'react';
import axios from 'axios';

// -----------------------------
// CurrentLocation (keeps the same live behaviour)
// -----------------------------
function CurrentLocation({ empId }) {
  const [loading, setLoading] = useState(false);
  const [loc, setLoc] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    if (!empId) {
      setLoc(null);
      setError('');
      return;
    }

    let cancelled = false;
    setLoading(true);
    setError('');
    setLoc(null);

    axios
      .get(`http://localhost:5001/api/employees/${empId}/location`, { timeout: 5000 })
      .then((res) => {
        if (cancelled) return;
        setLoc(res.data);
      })
      .catch((err) => {
        if (cancelled) return;
        console.error('Location load error', err && err.message ? err.message : err);
        setError('Failed to load location');
      })
      .finally(() => {
        if (!cancelled) setLoading(false);
      });

    return () => {
      cancelled = true;
    };
  }, [empId]);

  if (!empId) return null;

  return (
    <div className="current-location-card" style={{ marginTop: 8 }}>
      <h4 style={{ margin: '0 0 6px 0', fontSize: 14 }}>Swipe Details</h4>

      {loading && <div style={{ color: '#fff' }}>Loading location…</div>}

      {error && <div style={{ color: '#fff' }}>{error}</div>}

      {!loading && loc && !loc.found && (
        <div style={{ color: '#2ced0e' }}>No recent swipe</div>
      )}

      {!loading &&
        loc &&
        loc.found &&
        (() => {
          const istDate = loc.timestampUTC
            ? new Date(loc.timestampUTC).toLocaleDateString('en-IN', {
                timeZone: 'Asia/Kolkata',
              })
            : '';

          const istTime = loc.timestampUTC
            ? new Date(loc.timestampUTC).toLocaleTimeString('en-IN', {
                timeZone: 'Asia/Kolkata',
              })
            : '';

          return (
            <table
              style={{
                width: '100%',
                borderCollapse: 'collapse',
                fontSize: 13,
                color: '#000',
              }}
            >
              <tbody>
                <tr>
                  <td style={{ opacity: 0.8, width: 140 }}>Location</td>
                  <td>
                    {loc.partition || '—'}
                    {loc.floor ? ` · ${loc.floor}` : ''}
                  </td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Zone</td>
                  <td>{loc.Zone || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Date</td>
                  <td>{istDate || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Time</td>
                  <td>{istTime || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Door</td>
                  <td>{loc.door || '—'}</td>
                </tr>

                <tr>
                  <td style={{ opacity: 0.8 }}>Direction</td>
                  <td>{loc.direction || '—'}</td>
                </tr>
              </tbody>
            </table>
          );
        })()}
    </div>
  );
}

// -----------------------------
// EmployeeCard (table layout for employee fields, photo section unchanged)
// -----------------------------
export default function EmployeeCard({ emp }) {
  if (!emp) return null;

  const rawStatus = emp.Employee_Status || 'Deactive';
  const normalizedStatus = rawStatus.trim().toLowerCase();
  const isTerminated = normalizedStatus === 'terminated';

  return (
    <div
      className={`employee-card ${isTerminated ? 'terminated' : ''}`}
      data-status={normalizedStatus}
      style={{
        display: 'flex',
        gap: '1rem',
        background:
          normalizedStatus === 'active'
            ? 'linear-gradient(to right, rgba(40, 167, 69, 1) 0%, rgba(40, 167, 69, 0.1) 100%)'
            : '#000',
        padding: '1rem',
        borderRadius: 8,
        boxShadow: '0 1px 4px rgba(0,0,0,0.08)',
        color: '#000',
      }}
    >
      {/* Photo section - left unchanged as requested */}
      <div
        className="card-photo-section"
        style={{
          minWidth: 140,
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
        }}
      >
        <div className="photo-wrapper" style={{ position: 'relative' }}>
          <img
            src={`http://localhost:5001${emp.imageUrl}`}
            alt={emp.EmpName}
            style={{
              width: 325,
              height: 350,
              border: '2px solid #f0f0f0',
            }}
            onError={(e) => {
              e.target.onerror = null;
              e.target.src = '/images/no-photo.jpg';
            }}
          />

          <span
            className={`status-badge ${
              normalizedStatus === 'active' ? 'active' : 'deactive'
            }`}
            style={{
              position: 'absolute',
              bottom: 6,
              left: '50%',
              transform: 'translateX(-50%)',
              background: normalizedStatus === 'active' ? '#0b9' : '#999',
              color: '#fff',
              padding: '4px 8px',
              borderRadius: 6,
              fontSize: 12,
            }}
          >
            {rawStatus}
          </span>
        </div>
      </div>

      {/* Employee info as a table */}
      <div className="card-details" style={{ flex: 1 }}>
        <h2 className="emp-name" style={{ margin: 0, marginBottom: 8 }}>
          {emp.EmpName}
        </h2>

        <table style={{ width: '100%', borderCollapse: 'collapse', fontSize: 14 }}>
          <tbody>
            <tr>
              <td style={{ opacity: 0.8, width: 140 }}>Employee ID</td>
              <td>{emp.EmployeeID || '—'}</td>
            </tr>

            <tr>
              <td style={{ opacity: 0.8 }}>Personnel Type</td>
              <td>{emp.PersonnelType || '—'}</td>
            </tr>

            <tr>
              <td style={{ opacity: 0.8 }}>Manager</td>
              <td>{emp.Manager_Name || '—'}</td>
            </tr>

            <tr>
              <td style={{ opacity: 0.8 }}>Manager WU ID</td>
              <td>{emp.Manager_WU_ID || '—'}</td>
            </tr>

            <tr>
              <td style={{ opacity: 0.8 }}>Status</td>
              <td>{rawStatus}</td>
            </tr>

            <tr>
              <td style={{ opacity: 0.8 }}>Total Cards</td>
              <td>{emp.Total_Cards ?? 0}</td>
            </tr>

            <tr>
              <td style={{ opacity: 0.8 }}>Active Cards</td>
              <td>{emp.Active_Cards ?? 0}</td>
            </tr>
          </tbody>
        </table>

        {/* Current Location component (live) */}
        <div style={{ marginTop: 8 }}>
          <CurrentLocation empId={emp.id ?? emp.EmployeeID} />
        </div>
      </div>
    </div>
  );
}
