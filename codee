function buildVisitedForDate(allEvents, atDate) {
  const asOfLocalDate = DateTime.fromJSDate(atDate, { zone: 'utc' })
    .setZone('Asia/Kolkata')
    .toFormat('yyyy-LL-dd');

  const todayIns = allEvents.filter(evt => evt.Direction === 'InDirection' && evt.Dateonly === asOfLocalDate);

  // Dedupe by the same dedupKey used elsewhere
  const dedup = new Map();
  for (const e of todayIns) {
    const key = e.PersonGUID || e.EmployeeID || e.CardNumber || e.ObjectName1;
    if (!key) continue;
    const curTs = (e.LocaleMessageTime instanceof Date) ? e.LocaleMessageTime.getTime() : Date.parse(String(e.LocaleMessageTime));
    const prev = dedup.get(key);
    if (!prev || curTs > prev.ts) {
      dedup.set(key, { rec: e, ts: curTs });
    }
  }

  const finalList = Array.from(dedup.values()).map(x => x.rec);
  const employees = finalList.filter(e =>
    !['Contractor','Terminated Contractor','Temp Badge','Visitor','Property Management'].includes(e.PersonnelType)
  ).length;
  const contractors = finalList.length - employees;
  return { employees, contractors, total: finalList.length };
}