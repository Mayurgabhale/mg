// --- replace the previous "if (selectedCompany) { ... }" block inside detailRows useMemo with this ---
if (selectedCompany) {
  // expected format: "Country||City||Company"
  const parts = String(selectedCompany).split('||').map(p => (p || '').trim().toLowerCase());
  const selCountry = parts[0] || '';
  const selCity = parts[1] || '';
  const selCompany = parts[2] || '';

  result = result.filter(r => {
    const rowCountry = (partitionToDisplay[r.PartitionName2]?.country || 'Unknown').toString().trim().toLowerCase();
    const rowCity = (partitionToDisplay[r.PartitionName2]?.city || r.PartitionName2 || 'Unknown').toString().trim().toLowerCase();
    const rowCompany = ((r.CompanyName || 'Unknown').toString().trim()).toLowerCase();

    return rowCountry === selCountry && rowCity === selCity && rowCompany === selCompany;
  });
}





....4






// inside companyRows.map((r, i) => { ... })
// replace the part where you compute companyOnly and the onClick handler with this:

const rowKey = `${r.country}||${r.city}||${r.company}`;
const isSelected = selectedCompany === rowKey;

return (
  <TableRow
    key={`${r.company}-${i}`}
    onClick={() => {
      if (selectedCompany === rowKey) {
        setSelectedCompany(null);
        setShowDetails(true);
      } else {
        setSelectedCompany(rowKey);
        setShowDetails(true);
      }
    }}
    sx={{
      cursor: 'pointer',
      '&:hover': { backgroundColor: '#474747' },
      ...(isSelected ? { backgroundColor: '#474747' } : {})
    }}
    tabIndex={0}
    role="button"
  >
    <TableCell sx={{ border: '2px solid #000' }}>{r.country}</TableCell>
    <TableCell sx={{ border: '2px solid #000' }}>{r.city}</TableCell>
    <TableCell sx={{ border: '2px solid #000' }}>{r.company}</TableCell>
    <TableCell align="right" sx={{ bgcolor: '#FFC107', fontWeight: 'bold', border: '2px solid #000' }}>
      {r.total}
    </TableCell>
  </TableRow>
);