// NEW: personnel header filter state
const [selectedPersonnel, setSelectedPersonnel] = useState(null); // 'Employee' | 'Contractor' | null
const [selectedSummaryPartition, setSelectedSummaryPartition] = useState(null); // e.g. 'Costa Rica||Costa Rica'




....


<TableRow sx={{ bgcolor: '#FFC107' }}>
  {['Country', 'City', 'Employees', 'Contractors', 'Total'].map(h => {
    // clickable personnel headers
    if (h === 'Employees' || h === 'Contractors') {
      const personnelType = h === 'Employees' ? 'Employee' : 'Contractor';
      const isActive = selectedPersonnel === personnelType && !selectedSummaryPartition;

      return (
        <TableCell
          key={h}
          align="right"
          onClick={() => {
            // toggle global personnel filter (header click)
            if (isActive) {
              setSelectedPersonnel(null);
            } else {
              setSelectedPersonnel(personnelType);
              setSelectedSummaryPartition(null); // clear any partition-specific selection
              setSelectedCompany(null);          // clear company selection to avoid conflicts
              setShowDetails(true);
            }
          }}
          sx={{
            color: isActive ? '#fff' : '#000',
            fontWeight: 'bold',
            fontSize: 14,
            border: '2px solid #000',
            cursor: 'pointer',
            textAlign: 'right',
            bgcolor: isActive ? '#474747' : '#FFC107',
            '&:hover': { backgroundColor: isActive ? '#5a5a5a' : '#f2f2f2' }
          }}
        >
          {h}
        </TableCell>
      );
    }

    // non-clickable headers
    return (
      <TableCell
        key={h}
        align={['Country', 'City'].includes(h) ? 'left' : 'right'}
        sx={{ color: '#000', fontWeight: 'bold', fontSize: 14, border: '2px solid #000' }}
      >
        {h}
      </TableCell>
    );
  })}
</TableRow>
