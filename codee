// src/components/PersonnelBarChart.jsx
import React from 'react';
import {
  BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell, Legend
} from 'recharts';
import { Card } from 'react-bootstrap';

const BAR_COLORS = [
  '#FFC72C', '#228B22', '#EEA0F1', '#E18E30',
  '#B5B21A', '#FFE680', '#FFD11A', '#FFEB99',
  '#C9A9A6', '#96DED1'
];

export default function PersonnelBarChart({ data = [] }) {
  const total = data.reduce((sum, e) => sum + e.count, 0);

  if (!data.length || total === 0) {
    return (
      <Card body className="bg-dark text-warning">
        No personnel data
      </Card>
    );
  }

  const sorted = [...data].sort((a, b) => b.count - a.count);

  return (
    <Card
      className="mb-4 shadow-sm"
      style={{ background: '#1a1a1a', border: '2px solid #FFC72C' }}
    >
      <Card.Header
        className="text-center fw-bold"
        style={{ background: '#000', color: '#FFC72C' }}
      >
        Personnel Type Occupancy
      </Card.Header>
      <Card.Body style={{ height: 450, padding: '1rem' }}>
        <ResponsiveContainer>
          <BarChart
            layout="vertical"
            data={sorted}
            margin={{ top: 20, right: 30, left: 60, bottom: 20 }}
          >
            <XAxis
              type="number"
              stroke="#fff"
              tick={{ fill: '#fff' }}
            />
            <YAxis
              type="category"
              dataKey="personnelType"
              stroke="#fff"
              tick={{ fill: '#fff', fontWeight: '600' }}
              width={150}
            />
            <Tooltip
              wrapperStyle={{
                backgroundColor: '#2f2f2f',
                border: '1px solid #444',
                borderRadius: '4px',
                color: '#fff'
              }}
              formatter={(value, name) => [`${value}`, `${name}`]}
            />
            <Legend
              verticalAlign="top"
              wrapperStyle={{ color: '#fff', paddingBottom: 10 }}
            />
            <Bar dataKey="count" barSize={30}>
              {sorted.map((entry, index) => (
                <Cell key={entry.personnelType} fill={BAR_COLORS[index % BAR_COLORS.length]} />
              ))}
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}