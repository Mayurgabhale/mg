// --------------------------
// helper: computeVisitedToday using optional reference date
// Counts any swipe (In or Out) on the same Denver date and up to referenceDt (if provided).
function computeVisitedToday(allEvents, referenceDt = null) {
  const seen = new Map(); // key -> PersonnelType

  allEvents.forEach(evt => {
    // Must be same Denver date as referenceDt (or today when referenceDt null)
    if (!isSameDenverDate(evt.Dateonly, referenceDt)) return;

    // If referenceDt provided, ensure the event's local datetime <= referenceDt
    if (referenceDt) {
      // Prefer Dateonly + Swipe_Time (DB local fields)
      if (!evt.Dateonly || !evt.Swipe_Time) return;
      const evtDt = DateTime.fromISO(`${evt.Dateonly}T${evt.Swipe_Time}`, { zone: 'America/Denver' });
      if (!evtDt.isValid) return;
      if (evtDt > referenceDt.setZone('America/Denver')) return;
    }

    const key = evt.PersonGUID || evt.EmployeeID || evt.CardNumber;
    if (!key) return;
    if (!seen.has(key)) {
      seen.set(key, evt.PersonnelType);
    }
  });

  let employees = 0, contractors = 0;
  seen.forEach(type => {
    if (type === 'Employee' || type === 'Terminated Personnel') employees++;
    else contractors++;
  });

  return { total: seen.size, employees, contractors };
}
