import React, { useState } from 'react';
import { FaUser, FaIdCard, FaUserTie, FaChevronDown, FaChevronUp } from 'react-icons/fa';
import CurrentLocation from './CurrentLocation';
import './EmployeeCard.css';

export default function EmployeeCard({ emp }) {
  const [showAll, setShowAll] = useState(false);
  if (!emp) return null;

  const rawStatus = emp.Employee_Status || 'Deactive';
  const normalizedStatus = rawStatus.trim().toLowerCase();
  const isRedStatus = normalizedStatus === 'deactive' || normalizedStatus === 'terminated';

  return (
    <div
      className="employee-card-container"
      data-status={normalizedStatus}
      style={{
        background: isRedStatus
          ? '#e74c3c'
          : 'linear-gradient(180deg, #131318 0%, #1d1d26 100%)',
      }}
    >
      {/* Left column */}
      <div className="left-col">
        <div className="photo-ring">
          <img
            className="photo"
            src={
              emp.imageUrl
                ? `http://localhost:5001${emp.imageUrl}`
                : '/images/no-photo.jpg'
            }
            alt={emp.EmpName || 'Employee photo'}
            onError={(e) => {
              e.target.onerror = null;
              e.target.src = '/images/no-photo.jpg';
            }}
          />
        </div>
        <div className="photo-meta">
          <div className="emp-name">{emp.EmpName || '—'}</div>
          <div className="emp-role">{emp.PersonnelType || 'Employee'}</div>
          <div className={`status-pill ${normalizedStatus}`}>{rawStatus}</div>
        </div>
      </div>

      {/* Separator */}
      <div className="separator" aria-hidden />

      {/* Right column */}
      <div className="right-col">
        <h3 className="profile-title">Profile Details</h3>
        <table className="details-table" aria-label="employee details">
          <tbody>
            {/* Always visible details */}
            <tr>
              <td className="label"><FaUser /> Name</td>
              <td className="value">{emp.EmpName || '—'}</td>
            </tr>
            <tr>
              <td className="label"><FaIdCard /> Employee ID</td>
              <td className="value">{emp.EmployeeID || '—'}</td>
            </tr>

            {/* Conditionally visible details */}
            {showAll && (
              <>
                <tr>
                  <td className="label"><FaUserTie /> Manager</td>
                  <td className="value">{emp.Manager_Name || '—'}</td>
                </tr>
                <tr>
                  <td colSpan="2" style={{ paddingTop: 1 }}>
                    <CurrentLocation empId={emp.id ?? emp.EmployeeID} />
                  </td>
                </tr>
              </>
            )}
          </tbody>
        </table>

        {/* Toggle button */}
        <button
          className="show-more-btn"
          onClick={() => setShowAll(!showAll)}
        >
          {showAll ? (
            <>
              Show Less <FaChevronUp />
            </>
          ) : (
            <>
              Show All <FaChevronDown />
            </>
          )}
        </button>
      </div>
    </div>
  );
}