// --- update in controllers/denverLiveOccupancyController.js

exports.getDenverSnapshotAt = async (req, res) => {
  try {
    const atRaw = req.query.at;
    if (!atRaw) {
      return res.status(400).json({
        error: 'missing "at" query parameter (expected ISO date-time string)'
      });
    }

    // Parse ISO string as UTC first, then shift into Denver
    const atDt = DateTime.fromISO(atRaw, { zone: 'utc' }).setZone('America/Denver');
    if (!atDt.isValid) {
      return res.status(400).json({ error: 'invalid "at" timestamp' });
    }

    const untilJsDate = atDt.toJSDate();

    // ✅ fetch with correct 24h window ending at requested time
    const events = await fetchEventsWindowUntil(untilJsDate);

    // ✅ filter to same Denver date as requested snapshot
    const targetDate = atDt.toFormat('yyyy-LL-dd');
    const filtered = events.filter(e => e.Dateonly === targetDate);

    const payload = buildOccupancyForToday(filtered, []);
    payload.asOf = atDt.toUTC().toISO();

    return res.json(payload);
  } catch (err) {
    console.error('getDenverSnapshotAt error:', err);
    return res.status(500).json({ error: 'Internal Server Error' });
  }
};