// top-level helper: match a member's live/current location fields against the filter zone (case-insensitive)
const matchesFilterZone = (member, zone) => {
  if (!zone) return true;
  const needle = String(zone).toLowerCase().trim();

  // candidate fields that may contain the member's current location / zone / floor
  const candidates = [
    member.zone,
    member.Zone,
    member.liveLocation,
    member.location,
    member.Location,
    member.Floor,
    member.floor,
    member['Base Location'],
    member['BaseLocation'],
    member.area,
    member.Area
  ]
    .filter(Boolean)
    .map(v => String(v).toLowerCase());

  // match if any candidate contains the needle (substring match)
  return candidates.some(c => c.includes(needle));
};