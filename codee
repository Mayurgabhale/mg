// filter only events on that Denver local date
const targetDate = atDt.toFormat('yyyy-LL-dd');
const filtered = events.filter(e => e.Dateonly === targetDate);
.............

// filter only events on that Denver local date AND that occurred at-or-before requested atDt
const targetDate = atDt.toFormat('yyyy-LL-dd');
const filtered = events.filter(e => {
  if (e.Dateonly !== targetDate) return false;

  // parse the event's LocaleMessageTime as an ISO instant (preserve zone if present)
  const evtDt = DateTime.fromISO(e.LocaleMessageTime, { setZone: true });

  // If parsing failed, conservatively drop the event
  if (!evtDt.isValid) return false;

  // compare instants (both DateTime objects)
  // keep events that occurred at or before the snapshot instant
  return evtDt.toMillis() <= atDt.toMillis();
});
