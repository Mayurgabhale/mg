// src/components/ZoneTowerChart.jsx

import React from "react";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  LabelList,
  Cell
} from "recharts";
import { Card } from "react-bootstrap";

// Brand gradient colors for different zones
const COLORS = [
  "url(#gradRed)",
  "url(#gradYellow)",
  "url(#gradOrange)",
  "url(#gradGreen)",
  "url(#gradPurple)",
  "url(#gradBlue)",
];

export default function ZoneTowerChart({ data = [] }) {
  if (!data.length) {
    return (
      <Card body className="bg-dark text-white text-center">
        No zone data available
      </Card>
    );
  }

  return (
    <Card className="mb-4 shadow-lg border-0">
      <Card.Header className="bg-dark text-warning text-center fw-bold">
        <h5 className="mb-0">Area-wise Headcount Towers</h5>
      </Card.Header>
      <Card.Body
        style={{
          height: "55vh",
          backgroundColor: "#1a1a1a",
          padding: "1rem",
        }}
      >
        <ResponsiveContainer width="100%" height="100%">
          <BarChart
            data={data}
            margin={{ top: 20, right: 20, left: 20, bottom: 20 }}
          >
            {/* Background grid */}
            <CartesianGrid strokeDasharray="3 3" stroke="#444" />

            {/* X & Y Axis */}
            <XAxis
              dataKey="zone"
              tick={{ fill: "#FFD100", fontSize: 12 }}
              interval={0}
              angle={-20}
              textAnchor="end"
            />
            <YAxis tick={{ fill: "#FFD100" }} />

            {/* Gradient defs */}
            <defs>
              <linearGradient id="gradRed" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stopColor="#FF4C4C" />
                <stop offset="100%" stopColor="#B22222" />
              </linearGradient>
              <linearGradient id="gradYellow" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stopColor="#FFD700" />
                <stop offset="100%" stopColor="#E6AC00" />
              </linearGradient>
              <linearGradient id="gradOrange" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stopColor="#FFA500" />
                <stop offset="100%" stopColor="#CC7000" />
              </linearGradient>
              <linearGradient id="gradGreen" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stopColor="#32CD32" />
                <stop offset="100%" stopColor="#228B22" />
              </linearGradient>
              <linearGradient id="gradPurple" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stopColor="#8A2BE2" />
                <stop offset="100%" stopColor="#4B0082" />
              </linearGradient>
              <linearGradient id="gradBlue" x1="0" y1="0" x2="0" y2="1">
                <stop offset="0%" stopColor="#1E90FF" />
                <stop offset="100%" stopColor="#0047AB" />
              </linearGradient>
            </defs>

            {/* Bars as towers */}
            <Bar
              dataKey="count"
              radius={[8, 8, 0, 0]} // Rounded top corners
              stroke="#fff"
              strokeWidth={1}
            >
              {data.map((entry, idx) => (
                <Cell
                  key={`cell-${idx}`}
                  fill={COLORS[idx % COLORS.length]}
                />
              ))}
              {/* Count labels on top of towers */}
              <LabelList
                dataKey="count"
                position="top"
                style={{ fill: "#fff", fontWeight: "bold" }}
              />
            </Bar>

            <Tooltip
              cursor={{ fill: "rgba(255,255,255,0.1)" }}
              contentStyle={{
                backgroundColor: "#000",
                border: "1px solid #FFD100",
                borderRadius: 4,
                color: "#FFD100",
              }}
            />
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}