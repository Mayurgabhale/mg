// 1) add these imports at the top of the file
import * as XLSX from 'xlsx';
import { saveAs } from 'file-saver';

// 2) add this export handler inside the component (place it after formatApiDateTime and before the return)
const handleExportFloor = (floor, emps) => {
  if (!emps || emps.length === 0) return;

  // build rows: header + data
  const rows = [
    ['Emp ID', 'Name', 'Swipe Time', 'Type', 'Company', 'Card', 'Door'],
    ...emps.map(r => [
      r.EmployeeID ?? '',
      r.ObjectName1 ?? '',
      formatApiDateTime(r.LocaleMessageTime),
      r.PersonnelType ?? '',
      r.CompanyName ?? '',
      r.CardNumber ?? '',
      r.Door ?? ''
    ])
  ];

  // convert to sheet & workbook
  const ws = XLSX.utils.aoa_to_sheet(rows);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, 'FloorExport');

  // filename safe floor name + timestamp
  const safeFloor = floor.replace(/[^a-z0-9\-_]/gi, '_').slice(0, 80);
  const ts = new Date().toISOString().slice(0, 19).replace(/[:T]/g, '-');
  const filename = `${partition || 'partition'}_${safeFloor}_${ts}.xlsx`;

  const buf = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });
  saveAs(new Blob([buf]), filename);
};

// 3) replace the floor card JSX (the displayed.map rendering) with this updated version
{/* Floor cards */}
<Box display="flex" flexWrap="wrap" width="100%" sx={{ px: 2 }}>
  {displayed.map(([floor, emps]) => (
    <Box key={floor} sx={{ width: "50%", p: 2 }}>
      <Paper sx={{
        border: "2px solid #FFC107",
        p: 2,
        background: "rgba(0,0,0,0.4)"
      }}>
        {/* Header row: left = floor title, right = export button */}
        <Box display="flex" alignItems="center" justifyContent="space-between" mb={1}>
          <Typography
            variant="subtitle1"
            fontWeight={600}
            sx={{ color: "#FFC107" }}
          >
            {floor} (Total {emps.length})
          </Typography>

          <Button
            size="small"
            variant="contained"
            onClick={() => handleExportFloor(floor, emps)}
            sx={{ bgcolor: '#FFC107', color: '#000', textTransform: 'none' }}
          >
            Export
          </Button>
        </Box>

        <TableContainer
          component={Paper}
          variant="outlined"
          sx={{ mb: 1, background: "rgba(0,0,0,0.4)" }}
        >
          <Table size="small">
            <TableHead>
              <TableRow sx={{ bgcolor: "#000" }}>
                {["Emp ID", "Name", "Swipe Time", "Type", "Company", "Card", "Door"].map(h => (
                  <TableCell
                    key={h}
                    sx={{
                      color: "#FFC107",
                      border: "1px solid #FFC107",
                      fontWeight: "bold"
                    }}
                  >
                    {h}
                  </TableCell>
                ))}
              </TableRow>
            </TableHead>
            <TableBody>
              {emps.slice(0, 10).map((r, i) => (
                <TableRow key={i}>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {r.EmployeeID}
                  </TableCell>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {r.ObjectName1}
                  </TableCell>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {formatApiDateTime(r.LocaleMessageTime)}
                  </TableCell>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {r.PersonnelType}
                  </TableCell>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {r.CompanyName}
                  </TableCell>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {r.CardNumber}
                  </TableCell>
                  <TableCell sx={{ color: "#fff", border: "1px solid #FFC107" }}>
                    {r.Door}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>

        <Button
          size="small"
          onClick={() => setExpandedFloor(f => f === floor ? null : floor)}
          sx={{ color: "#FFC107" }}
        >
          {expandedFloor === floor ? "Hide" : "See moreâ€¦"}
        </Button>
      </Paper>
    </Box>
  ))}
</Box>