// --- replace your existing detailRows useMemo with this ---
const detailRows = useMemo(() => {
  if (!data || !pickedDate) return [];
  const ds = format(pickedDate, 'yyyy-MM-dd');

  // a) all swipes that day for our partitions
  const all = data.details.filter(r =>
    filteredPartitionKeys.includes(r.PartitionName2) &&
    r.LocaleMessageTime && r.LocaleMessageTime.startsWith(ds)
  );

  // b) oldest → newest
  all.sort((a, b) => new Date(a.LocaleMessageTime) - new Date(b.LocaleMessageTime));

  // c) keep last swipe per person
  const lastByPerson = {};
  all.forEach(r => { lastByPerson[r.PersonGUID] = r; });

  // d) values (final swipe entries) and only InDirection (still inside)
  let rows = Object.values(lastByPerson).filter(r => r.Direction === 'InDirection');

  // If a company row was clicked, filter by company name (case-insensitive, trimmed).
  // selectedCompany has format "Country||City||Company" — we take the Company part.
  if (selectedCompany) {
    const parts = selectedCompany.split('||');
    const selCompanyRaw = parts[2] || '';
    const selCompanyNorm = String(selCompanyRaw).replace(/\s+/g, ' ').trim().toLowerCase();

    rows = rows.filter(r => {
      const rn = String(r.CompanyName || 'Unknown').replace(/\s+/g, ' ').trim().toLowerCase();
      return rn === selCompanyNorm;
    });
  }

  return rows;
}, [data, pickedDate, filteredPartitionKeys, selectedCompany]);


if (selectedCompany) {
  const [selCountry, selCity, selCompanyRaw] = selectedCompany.split('||');
  const selCompanyNorm = String(selCompanyRaw || '').replace(/\s+/g,' ').trim().toLowerCase();

  rows = rows.filter(r => {
    const rnCompany = String(r.CompanyName || 'Unknown').replace(/\s+/g,' ').trim().toLowerCase();
    const rowCity = partitionToDisplay[r.PartitionName2]?.city || r.PartitionName2 || '';
    const rowCountry = partitionToDisplay[r.PartitionName2]?.country || 'Unknown';
    return rnCompany === selCompanyNorm && rowCity === selCity && rowCountry === selCountry;
  });
}








......




{selectedCompany && (
  <Box mb={1} sx={{ textAlign: 'center' }}>
    <Typography variant="subtitle2" sx={{ fontWeight: 'bold' }}>
      Showing records for: {selectedCompany.split('||')[2]}
    </Typography>
  </Box>
)}

