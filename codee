card.appendChild(statusContainer);



// --- show policy tooltip for devices marked "Not accessible" ---
const remarkText = (device.remark || "").toString().trim();
if (remarkText && /not\s+access/i.test(remarkText)) {
    // ensure card is relatively positioned so the tooltip can be absolutely positioned
    if (!card.style.position) card.style.position = "relative";

    // create tooltip element
    const tooltip = document.createElement("div");
    tooltip.className = "device-access-tooltip";
    tooltip.textContent = "Due to policy, this camera is Not accessible";

    // inline styles so no external CSS changes required
    tooltip.style.position = "absolute";
    tooltip.style.bottom = "100%";
    tooltip.style.left = "8px";
    tooltip.style.padding = "6px 8px";
    tooltip.style.background = "rgba(0,0,0,0.85)";
    tooltip.style.color = "#fff";
    tooltip.style.borderRadius = "4px";
    tooltip.style.fontSize = "12px";
    tooltip.style.whiteSpace = "nowrap";
    tooltip.style.pointerEvents = "none"; // don't block mouse events
    tooltip.style.opacity = "0";
    tooltip.style.transform = "translateY(-6px)";
    tooltip.style.transition = "opacity 0.12s ease, transform 0.12s ease";
    tooltip.style.zIndex = "999";

    // attach tooltip to card
    card.appendChild(tooltip);

    // show/hide on hover
    card.addEventListener("mouseenter", () => {
        tooltip.style.opacity = "1";
        tooltip.style.transform = "translateY(-10px)";
    });
    card.addEventListener("mouseleave", () => {
        tooltip.style.opacity = "0";
        tooltip.style.transform = "translateY(-6px)";
    });

    // optional: set native title too (fallback)
    card.title = tooltip.textContent;
}