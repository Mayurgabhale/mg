// canonicalized company name
const company = getCanonicalCompany(r);






.....

// --- Canonicalize company names for LACA (keeps your logic, just groups known variants) ---
const getCanonicalCompany = (r) => {
  const raw = r && r.CompanyName ? String(r.CompanyName).trim() : '';
  const pt = r && r.PersonnelType ? String(r.PersonnelType).trim() : '';
  const use = (raw || pt || '').toLowerCase().replace(/\s+/g, ' ').trim();

  if (!use) return 'Unknown';

  // simple pattern matching rules for the examples you provided
  if (/atos/.test(use)) return 'Atos';
  if (/ec sistemas/.test(use)) return 'EC Sistemas SRL';
  if (/gamad/.test(use)) return 'Gamad S.A';
  if (/murata/.test(use)) return 'Murata SA (HCT)';
  if (/gft brasil/.test(use) || /gft brasil consultoria/.test(use)) return 'GFT Brasil Consultoria Informatica LTDA';
  if (/21 grados/.test(use) || /^21\s*grados/.test(use)) return '21 Grados';
  if (/administradora zona franca genesis/.test(use)) return 'Administradora Zona Franca Genesis';
  if (/mabinsa/.test(use)) return 'Mabinsa';
  if (/mt international operations/.test(use) || /mt international operations srl/.test(use)) return 'MT International Operations Srl';
  if (/sbm management/.test(use)) return 'SBM Management de Costa Rica S.A';
  if (/ubion del oeste/.test(use) || /union del oeste/.test(use)) return 'Ubion del Oeste de Costa Rica';
  if (/western union/.test(use) || /^wu\b/.test(use)) return 'Western Union';
  if (/it facil/.test(use) || /itfacil/.test(use)) return 'IT Facil (HCT)';

  // fallback: preserve original CompanyName if present (keeps capitalization), else PersonnelType or Unknown
  return raw || pt || 'Unknown';
};