// src/components/Header.jsx

// ... imports same as before

// ── Display name map ─────────────────────────────────────────────────────────
const displayNameMap = {
  'US.CO.OBS': 'Denver',
  'US.FL.Miami': 'Miami',
  'US.NYC': 'New York',
  'USA/Canada Default': 'Austin Texas'
};

// ── Header Component ──────────────────────────────────────────────────────────
export default function Header({
  title,
  mode,
  onTimeSelect,
  onLiveClick
}) {
  const navigate = useNavigate();
  const location = useLocation();
  const { data } = useLiveOccupancy(1000);

  const [lastUpdate, setLastUpdate] = useState('');
  const [anchorEl, setAnchorEl] = useState(null);
  const [draftDate, setDraftDate] = useState(dayjs().utc());

  useEffect(() => {
    if (data) setLastUpdate(new Date().toLocaleTimeString());
  }, [data]);

  // ── Routing logic ──────────────────────────────────────────────────────────
  const segments = location.pathname.split('/').filter(Boolean);
  const isPartitionPage = segments[0] === 'partition' && Boolean(segments[1]);
  const currentPartition = isPartitionPage ? decodeURIComponent(segments[1]) : '';
  const isHistoryPage = location.pathname.includes('/history');

  const flagMap = {
    'US.CO.OBS': DenverFlag,
    'US.FL.Miami': MiamiFlag,
    'US.NYC': NewYorkFlag,
    'USA/Canada Default': AustinFlag
  };
  const selectedFlag = flagMap[currentPartition] || DefaultFlag;

  const handlePartitionChange = newPartition => {
    if (!newPartition) return navigate('/');
    let path = `/partition/${encodeURIComponent(newPartition)}`;
    if (isHistoryPage) path += '/history';
    navigate(path);
  };

  const handleDetailsClick = () => {
    const partitionToUse = currentPartition || 'US.CO.OBS';
    navigate(`/partition/${encodeURIComponent(partitionToUse)}/details`);
  };

  // ... rest of component remains unchanged
}