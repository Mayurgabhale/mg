// Replace the existing Overlay with this
const Overlay = ({ width, height }) => {
  if (!width || !height) return null;

  const cx = width / 2;
  const cy = height / 2;

  // pixel radii approximations that match your donut's inner/outer % sizes
  const radiusOuter = Math.min(width, height) * 0.38;
  const radiusInner = Math.min(width, height) * 0.21;

  const startAngle = 90;
  const points = [];

  // compute mid-angle for each slice
  let angleCursor = 0;
  for (let i = 0; i < sorted.length; i++) {
    const value = sorted[i].count;
    const angle = (value / total) * 360;
    const midAngle = startAngle - (angleCursor + angle / 2);
    points.push({ midAngle, idx: i });
    angleCursor += angle;
  }

  // star path for center cutout (kept as before)
  const starPath = (() => {
    const spikes = 5;
    const outerR = Math.min(width, height) * 0.12;
    const innerR = outerR * 0.48;
    let rot = Math.PI / 2 * 3;
    let path = '';
    let step = Math.PI / spikes;

    for (let i = 0; i < spikes; i++) {
      const ox = cx + Math.cos(rot) * outerR;
      const oy = cy + Math.sin(rot) * outerR;
      if (i === 0) path += `M ${ox} ${oy}`;
      else path += ` L ${ox} ${oy}`;
      rot += step;

      const ix = cx + Math.cos(rot) * innerR;
      const iy = cy + Math.sin(rot) * innerR;
      path += ` L ${ix} ${iy}`;
      rot += step;
    }
    path += ' Z';
    return path;
  })();

  return (
    <g>
      {/* plain grey circles (no icons/text) */}
      {points.map((p) => {
        const rad = (p.midAngle * Math.PI) / 180;
        const rMid = (radiusInner + radiusOuter) / 2;
        const x = cx + Math.cos(rad) * rMid;
        const y = cy - Math.sin(rad) * rMid;

        return (
          <g key={`dot-${p.idx}`} transform={`translate(${x}, ${y})`}>
            {/* single grey circle â€” adjust r and fill if you want different size/color */}
            <circle r={14} fill="#D1D5DB" opacity={0.9} />
          </g>
        );
      })}

      {/* star cutout in center (keeps the reference look) */}
      <path d={starPath} fill="#071018" stroke="rgba(255,255,255,0.06)" strokeWidth={2} />
    </g>
  );
};