
add scroll bar for right table, right table heigt same  as  {/* Left: existing summary table */}   table. 
both talbe widht and height i want same ok.
{/* Right: NEW company-level table (same style) */}


          <Box display="flex" alignItems="flex-start" sx={{ px: 2, mb: 2, gap: 2 }}>
            <Box sx={{ width: 200 }}>
              <LocalizationProvider dateAdapter={AdapterDateFns}>
                <DatePicker
                  label="Select date"
                  value={pickedDate}
                  onChange={d => { setPickedDate(d); setShowDetails(false); }}
                  renderInput={params => <TextField fullWidth {...params} sx={datePickerSx} />}
                />
              </LocalizationProvider>
            </Box>

            {/* Container for both tables side-by-side */}
            <Box sx={{ display: 'flex', gap: 2, width: '100%' }}>
              {/* Left: existing summary table */}
              <Box sx={{ flex: 1, maxWidth: 800, width: 420, }}>
                <Paper elevation={3} sx={{ p: 3, border: '3px solid #000', borderRadius: 2 }}>
                  <Table sx={{ border: '2px solid #000' }} size='small'>
                    <TableHead>
                      <TableRow>
                        <TableCell colSpan={5} align="center"
                          sx={{ fontWeight: 'bold', fontSize: 16, bgcolor: '#000', color: '#FFC107', border: '2px solid #000' }}>
                          {format(pickedDate, 'EEEE, d MMMM, yyyy')}
                        </TableCell>
                      </TableRow>
                      <TableRow sx={{ bgcolor: '#FFC107' }}>
                        {['Country', 'City', 'Employees', 'Contractors', 'Total'].map(h => (
                          <TableCell key={h} align={h === 'Country' || h === 'City' ? 'left' : 'right'}
                            sx={{ color: '#000', fontWeight: 'bold', fontSize: 14, border: '2px solid #000' }}>
                            {h}
                          </TableCell>
                        ))}
                      </TableRow>
                    </TableHead>
                    <TableBody>
                      {partitionRows.map((r, i) => (
                        <TableRow key={i}>
                          <TableCell sx={{ border: '2px solid #000' }}>{r.country}</TableCell>
                          <TableCell sx={{ border: '2px solid #000' }}>{r.city}</TableCell>
                          <TableCell align="right" sx={{ border: '2px solid #000' }}>{r.employee}</TableCell>
                          <TableCell align="right" sx={{ border: '2px solid #000' }}>{r.contractor}</TableCell>
                          <TableCell align="right" sx={{ bgcolor: '#FFC107', fontWeight: 'bold', border: '2px solid #000' }}>
                            {r.total}
                          </TableCell>
                        </TableRow>
                      ))}
                      <TableRow sx={{ bgcolor: '#666' }}>
                        <TableCell colSpan={2} align="right" sx={{ color: '#fff', fontWeight: 'bold', border: '2px solid #000' }}>
                          Total
                        </TableCell>
                        <TableCell align="right" sx={{ color: '#fff', fontWeight: 'bold', border: '2px solid #000' }}>
                          {partitionRows.reduce((s, r) => s + r.employee, 0)}
                        </TableCell>
                        <TableCell align="right" sx={{ color: '#fff', fontWeight: 'bold', border: '2px solid #000' }}>
                          {partitionRows.reduce((s, r) => s + r.contractor, 0)}
                        </TableCell>
                        <TableCell align="right" sx={{ color: '#fff', fontWeight: 'bold', bgcolor: '#333', border: '2px solid #000' }}>
                          {partitionRows.reduce((s, r) => s + r.total, 0)}
                        </TableCell>
                      </TableRow>
                    </TableBody>
                  </Table>
                </Paper>

                <Box display="flex" justifyContent="center" sx={{ mt: 1 }}>
                  <Button variant="contained" sx={{ bgcolor: '#FFC107', color: '#000' }}
                    onClick={() => setShowDetails(v => !v)}>
                    {showDetails ? 'Hide Details' : 'See Details'}
                  </Button>
                  {showDetails && (
                    <Button variant="outlined" sx={{ ml: 2, borderColor: '#FFC107', color: '#FFC107' }}
                      onClick={handleExport}>
                      Export to Excel
                    </Button>
                  )}
                  <Button
                    variant="contained"
                    sx={{ ml: 2, bgcolor: '#FFC107', color: '#000' }}
                    onClick={handleExportSummary}
                  >
                    Export Summary to Excel
                  </Button>
                </Box>
              </Box>

              {/* Right: NEW company-level table (same style) */}
              <Box sx={{ width: 720, minWidth: 300 }}>
                <Paper elevation={3} sx={{ p: 3, border: '3px solid #000', borderRadius: 2 }}>
                  <Table sx={{ border: '2px solid #000' }} size='small'>
                    <TableHead>
                      <TableRow>
                        <TableCell colSpan={4} align="center"
                          sx={{ fontWeight: 'bold', fontSize: 16, bgcolor: '#000', color: '#FFC107', border: '2px solid #000' }}>
                          {format(pickedDate, 'EEEE, d MMMM, yyyy')}
                        </TableCell>
                      </TableRow>
                      <TableRow sx={{ bgcolor: '#FFC107' }}>
                        {['Country', 'City', 'Company', 'Total'].map(h => (
                          <TableCell key={h} align={h === 'Country' || h === 'City' ? 'left' : 'right'}
                            sx={{ color: '#000', fontWeight: 'bold', fontSize: 14, border: '2px solid #000' }}>
                            {h}
                          </TableCell>
                        ))}
                      </TableRow>
                    </TableHead>
                    <TableBody>
                      {companyRows.length > 0 ? companyRows.map((r, i) => (
                        <TableRow key={`${r.company}-${i}`}>
                          <TableCell sx={{ border: '2px solid #000' }}>{r.country}</TableCell>
                          <TableCell sx={{ border: '2px solid #000' }}>{r.city}</TableCell>
                          <TableCell sx={{ border: '2px solid #000' }}>{r.company}</TableCell>
                          <TableCell align="right" sx={{ bgcolor: '#FFC107', fontWeight: 'bold', border: '2px solid #000' }}>
                            {r.total}
                          </TableCell>
                        </TableRow>
                      )) : (
                        <TableRow>
                          <TableCell colSpan={4} sx={{ border: '2px solid #000', textAlign: 'center', color: '#666', fontStyle: 'italic' }}>
                            No records for this date.
                          </TableCell>
                        </TableRow>
                      )}

                      {/* Totals row */}
                      <TableRow sx={{ bgcolor: '#666' }}>
                        <TableCell colSpan={2} align="right" sx={{ color: '#fff', fontWeight: 'bold', border: '2px solid #000' }}>
                          Total
                        </TableCell>
                        <TableCell align="right" sx={{ color: '#fff', fontWeight: 'bold', border: '2px solid #000' }}>
                          {/* empty cell for layout: keep consistent with left table */}
                        </TableCell>
                        <TableCell align="right" sx={{ color: '#fff', fontWeight: 'bold', bgcolor: '#333', border: '2px solid #000' }}>
                          {companyRows.reduce((s, r) => s + r.total, 0)}
                        </TableCell>
                      </TableRow>
                    </TableBody>
                  </Table>
                </Paper>


                <Box display="flex" justifyContent="center" sx={{ mt: 1 }}>
                  <Button
                    variant="contained"
                    sx={{ bgcolor: '#FFC107', color: '#000' }}
                    onClick={handleExportCompanies}
                  >
                    Export Companies to Excel
                  </Button>
                </Box>
              </Box>


            </Box>
          </Box>

