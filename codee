
function buildUrlFromHints(ip, cameraname = "", hyperlink = "") {
    ip = (ip || "").trim();
    hyperlink = (hyperlink || "").trim();

    // üîë Always prefer Excel's hyperlink if present
    if (hyperlink && /^https?:\/\//.test(hyperlink)) {
        return hyperlink;
    }

    // Direct IP
    if (/^\d{1,3}(\.\d{1,3}){3}$/.test(ip)) {
        return `http://${ip}`;
    }

    // Brand-based fallback
    const name = (cameraname || "").toLowerCase();
    if (/\bverkada\b/.test(name)) return `https://${ip}/#/login`;
    if (/\bflir\b/.test(name)) return `http://${ip}/control/userimage.html`;
    if (/\bhoneywell\b/.test(name)) return `http://${ip}/www/index.html`;
    if (/axis/.test(name)) return `http://${ip}/view/view.shtml`;

    return `http://${ip}`;
}

function openCamera(ip, name, hyperlink = "") {
    const url = buildUrlFromHints(ip, name, hyperlink);
    console.log("Opening URL:", url);  // Debug
    window.open(url, "_blank", "noopener");
}


...     
..

Opening URL: http://10.21.6.80
script.js:1738 Opening URL: http://10.21.6.74





function buildUrlFromHints(ip, cameraname = "", hyperlink = "") {
    ip = (ip || "").trim();
    hyperlink = (hyperlink || "").trim();   // clean Excel export
    
    // üîë 0) If Excel provides a hyperlink ‚Üí always prefer that
    if (hyperlink && /^https?:\/\//.test(hyperlink)) {
        return hyperlink;
    }

    // 1) Always try direct IP first
    if (/^\d{1,3}(\.\d{1,3}){3}$/.test(ip)) {
        return `http://${ip}`;
    }

    // 2) Brand-based detection
    const name = (cameraname || "").toLowerCase();
    if (/\bverkada\b/.test(name)) return `https://${ip}/#/login`;
    if (/\bflir\b/.test(name)) return `http://${ip}/control/userimage.html`;
    if (/\bhoneywell\b/.test(name)) return `http://${ip}/www/index.html`;
    if (/axis/.test(name)) return `http://${ip}/view/view.shtml`;

    // 3) Fallback
    return `http://${ip}`;
}

function openCamera(ip, name, hyperlink = "") {
    const url = buildUrlFromHints(ip, name, hyperlink);
    console.log("Opening URL:", url);   // üîç debug in console
    window.open(url, "_blank", "noopener");
}


....

function buildUrlFromHints(ip, cameraname = "", hyperlink = "") {
    ip = ip.trim(); // remove leading/trailing spaces

    // üîë 0) If Excel provides a hyperlink ‚Üí always prefer that
    if (hyperlink && hyperlink.startsWith("http")) {
        return hyperlink;
    }

    // 1) Always try direct IP first
    if (/^\d{1,3}(\.\d{1,3}){3}$/.test(ip)) {
        return `http://${ip}`;  // Open exactly like typing in browser
    }

    // 2) Brand-based detection
    const name = (cameraname || "").toLowerCase();
    if (/\bverkada\b/.test(name)) return `https://${ip}/#/login`;
    if (/\bflir\b/.test(name)) return `http://${ip}/control/userimage.html`;
    if (/\bhoneywell\b/.test(name)) return `http://${ip}/www/index.html`;
    if (/axis/.test(name)) return `http://${ip}/view/view.shtml`;

    // 3) Fallback
    return `http://${ip}`;
}

function openCamera(ip, name, hyperlink = "") {
    const url = buildUrlFromHints(ip, name, hyperlink);
    window.open(url, "_blank", "noopener");
}







.....

function buildUrlFromHints(ip, cameraname = "") {
    ip = ip.trim(); // remove leading/trailing spaces

    // 1) Always try direct IP first
    if (/^\d{1,3}(\.\d{1,3}){3}$/.test(ip)) {
        return `http://${ip}`;  // Open exactly like typing in browser
    }

    // 2) Optional: Brand-based detection (if IP not valid)
    const name = (cameraname || "").toLowerCase();
    if (/\bverkada\b/.test(name)) return `https://${ip}/#/login`;
    if (/\bflir\b/.test(name)) return `http://${ip}/control/userimage.html`;
    if (/\bhoneywell\b/.test(name)) return `http://${ip}/www/index.html`;
    if (/axis/.test(name)) return `http://${ip}/view/view.shtml`;

    // 3) Fallback (just open IP)
    return `http://${ip}`;
}

function openCamera(ip, name) {
    const url = buildUrlFromHints(ip, name);
    window.open(url, "_blank", "noopener");
}



cameraname 	Ip_address	Location	City	hyperlink	Remark
LACA PA 06 HALL CENTER	10.80.3.70	LACA	Panama		
LACA PA 09 GENERAL HALL	10.80.3.74	LACA	Panama		
15th Fl SouthWest Executive Hallway	10.58.74.33	NAMER	Denver Colorado		
HQ-6-EUC LAB SOUTH WEST(10.58.7.111)	10.58.7.111	NAMER	Denver Colorado		
HQ-6-EUC STORAGE ENTRANCE	10.58.7.107	NAMER	Denver Colorado		
HQ-6-FITNESS SOUTH WEST	10.58.7.127	NAMER	Denver Colorado		
HQ-6-WUNDERBAR CENTER	10.58.7.103	NAMER	Denver Colorado		
Backyard East Facing	10.1.10.249	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/9292172b-4c44-4bef-9a10-72d97951f14f	
Driveway South Facing	10.1.10.188	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/3634e578-1e31-4387-8a55-244c1156dd0f	
Patio West Facing	10.1.10.12	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/a2c2d99c-d308-41da-a9ca-16f7c98995aa	
Garage South East Facing	10.1.10.182	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/c505e4f1-9643-4e4d-aea1-74c7cf2f9383	
Lower Patio South West Facing	10.1.10.183	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/c7809512-9df7-416a-9cc9-a331e42ec28b	Not accessible 
Front Door	10.1.10.5	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/b60ca706-9316-452b-83ce-03ca69859ffe	Not accessible 
Top porch	10.1.10.235	NAMER	EP- Castle Pines	https://wu.command.verkada.com/cameras/1bae910f-09d6-4540-b1e1-1eb77d1c67da	Not accessible 
Main Entry	10.21.6.80	NAMER	NEW YORK 	https://wu.command.verkada.com/cameras/734217db-f619-4036-86a3-917313e05fa5	Not accessible 
Cafe	10.21.6.72	NAMER	NEW YORK 	https://wu.command.verkada.com/cameras/4def77da-d0b9-4a5c-8cf0-14fdb38d04c1	Not accessible 
Workspace West Panoramic	10.21.6.73	NAMER	NEW YORK 	https://wu.command.verkada.com/cameras/fddf2c3f-3ba5-4862-899b-151efecd6fcc	Not accessible 
Workspace East	10.21.6.77	NAMER	NEW YORK 	https://wu.command.verkada.com/cameras/3f3a257b-139c-488b-8af4-5e39165dbf6c	Not accessible 
Workspace West 	10.21.6.75	NAMER	NEW YORK 	https://wu.command.verkada.com/cameras/3be5ff20-dce3-4403-826e-7ee1613e9631	
