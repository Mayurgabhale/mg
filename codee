// NEW: export summary (partitionRows) to Excel -- fixed format
const handleExportSummary = () => {
  if (!pickedDate) return;

  // Build rows manually in the exact order you want
  const rows = [
    // Row 1: Date only (first cell filled, rest blank)
    [format(pickedDate, 'EEEE, d MMMM, yyyy')],
    // Row 2: Blank
    [],
    // Row 3: Column headers
    ['Country', 'City', 'Employees', 'Contractors', 'Total'],
    // Data rows
    ...partitionRows.map(r => [
      r.country,
      r.city,
      r.employee,
      r.contractor,
      r.total,
    ]),
    // Total row
    [
      'Total',
      '',
      partitionRows.reduce((s, r) => s + r.employee, 0),
      partitionRows.reduce((s, r) => s + r.contractor, 0),
      partitionRows.reduce((s, r) => s + r.total, 0),
    ],
  ];

  // Convert array-of-arrays to worksheet
  const ws = XLSX.utils.aoa_to_sheet(rows);

  // Optional: make the top date row span all 5 columns
  ws['!merges'] = [{ s: { r: 0, c: 0 }, e: { r: 0, c: 4 } }];

  // Create workbook and export
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, 'Summary');
  const buf = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });
  saveAs(new Blob([buf]), `apac_summary_${format(pickedDate, 'yyyyMMdd')}.xlsx`);
};







....

in excle like this disply
Country	City	Employees	Contractors	Total
Thursday, 28 August, 2025				
				
Philippines	Quezon City	338	42	380
India	Pune	721	96	817
Philippines	Taguig	13	2	15
Malaysia	Kuala Lumpur	5	1	6
Japan	Tokyo	8	1	9
Total		1085	142	1227

i want like this
Thursday, 28 August, 2025	

Country	City	Employees	Contractors	Total
				
Philippines	Quezon City	338	42	380
India	Pune	721	96	817
Philippines	Taguig	13	2	15
Malaysia	Kuala Lumpur	5	1	6
Japan	Tokyo	8	1	9
Total		1085	142	1227

ok 
but i want ot diplsy data top then other 
and i want this particuclar format 

  // NEW: export summary (partitionRows) to Excel -- fixed
  const handleExportSummary = () => {
    if (!pickedDate) return;

    const rows = [];
    // Add date row first
    rows.push({
      Country: format(pickedDate, 'EEEE, d MMMM, yyyy'),
      City: '',
      Employees: '',
      Contractors: '',
      Total: ''
    });

    // Then a blank row for readability (optional)
    rows.push({ Country: '', City: '', Employees: '', Contractors: '', Total: '' });

    // Then the actual summary rows
    rows.push(
      ...partitionRows.map(r => ({
        Country: r.country,
        City: r.city,
        Employees: r.employee,
        Contractors: r.contractor,
        Total: r.total,
      }))
    );

    // Finally add a total row
    rows.push({
      Country: 'Total',
      City: '',
      Employees: partitionRows.reduce((s, r) => s + r.employee, 0),
      Contractors: partitionRows.reduce((s, r) => s + r.contractor, 0),
      Total: partitionRows.reduce((s, r) => s + r.total, 0),
    });

    // Convert to worksheet & export
    const ws = XLSX.utils.json_to_sheet(rows);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'Summary');
    const buf = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });
    saveAs(new Blob([buf]), `apac_summary_${format(pickedDate, 'yyyyMMdd')}.xlsx`);
  };
