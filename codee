import React from "react";
import { Card } from "react-bootstrap";
import {
  FaUserTie,
  FaUserShield,
  FaUserCog,
  FaUserClock,
  FaUserFriends,
  FaUserTimes,
} from "react-icons/fa";
import "./PersonnelDonutChart.css";

// Brand colors (3D-friendly)
const COLORS = {
  Employee: "linear-gradient(135deg, #32CD32, #228B22)",
  Visitor: "linear-gradient(135deg, #FF6F61, #CC3A30)",
  Contractor: "linear-gradient(135deg, #1E90FF, #0066CC)",
  "Property Management": "linear-gradient(135deg, #FFD700, #E6AC00)",
  "Temp Badge": "linear-gradient(135deg, #8A2BE2, #551A8B)",
  "Terminated Personnel": "linear-gradient(135deg,rgb(233, 35, 190),rgb(179, 40, 229))",
};

// Icon mapping
const ICONS = {
  Employee: <FaUserTie />,
  Visitor: <FaUserFriends />,
  Contractor: <FaUserCog />,
  "Property Management": <FaUserShield />,
  "Temp Badge": <FaUserClock />,
  "Terminated Personnel": <FaUserTimes />,
};

export default function PersonnelPeopleGrid({ data = [] }) {
  const total = data.reduce((sum, e) => sum + e.count, 0);

  if (!data.length || total === 0) {
    return (
      <Card body className="bg-dark text-white p-3 text-center">
        No personnel data available
      </Card>
    );
  }

  const sorted = [...data].sort((a, b) => b.count - a.count);

  return (
    <Card className="mb-4 shadow-sm border personnel-card">
      <Card.Header className="bg-dark text-warning text-center fw-bold personnel-header">
        Personnel Type Headcount
      </Card.Header>
      <Card.Body className="personnel-body">
        {sorted.map((item) => (
          <div
            key={item.personnelType}
            className="personnel-block"
            style={{ background: COLORS[item.personnelType] }}
          >
            <div className="personnel-icon">{ICONS[item.personnelType]}</div>
            <div className="personnel-type">{item.personnelType}</div>
            <div className="personnel-count">{item.count}</div>
          </div>
        ))}
      </Card.Body>
    </Card>
  );
}



....

.personnel-card {
  width: 100%;
  overflow: hidden;
}

/* Header text */
.personnel-header {
  font-size: clamp(1rem, 1.2vw, 1.2rem);
  border-bottom: 2px solid var(--wu-yellow);
}

/* Card body */
.personnel-body {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  padding: 1.5rem;
}

/* Personnel block (default) */
.personnel-block {
  flex: 1 1 130px;       /* keeps blocks compact */
  max-width: 150px;      /* prevents huge blocks on large screens */
  aspect-ratio: 1 / 1;   /* always square */
  border-radius: 1rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: 900;
  box-shadow: 0 6px 15px rgba(0,0,0,0.3);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  margin: 4px;
}

.personnel-block:hover {
  transform: translateY(-5px) scale(1.05);
  box-shadow: 0 10px 20px rgba(0,0,0,0.4);
}

.personnel-icon {
  font-size: 1.6rem;
  margin-bottom: 0.4rem;
  filter: drop-shadow(0px 2px 3px rgba(0,0,0,0.4));
}

.personnel-type {
  font-size: 0.85rem;
  text-align: center;
  margin-bottom: 0.2rem;
  text-shadow: 0px 1px 2px rgba(0,0,0,0.5);
}

.personnel-count {
  font-size: 1.1rem;
  font-weight: bold;
  text-shadow: 0px 1px 3px rgba(0,0,0,0.6);
}

/* Small screens (<768px) */
@media (max-width: 767.98px) {
  .personnel-body {
    padding: 1rem;
    gap: 0.75rem;
  }
  .personnel-block {
    flex: 1 1 100px;
    max-width: 120px;
  }
  .personnel-icon { font-size: 1.3rem; }
  .personnel-type { font-size: 0.75rem; }
  .personnel-count { font-size: 1rem; }
}

/* Extra small screens (<480px) */
@media (max-width: 479.98px) {
  .personnel-body {
    padding: 0.75rem;
    gap: 0.5rem;
  }
  .personnel-block {
    flex: 1 1 80px;
    max-width: 90px;
  }
  .personnel-icon { font-size: 1.1rem; }
  .personnel-type { font-size: 0.7rem; }
  .personnel-count { font-size: 0.9rem; }
}