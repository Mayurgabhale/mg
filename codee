  // 2) add this export handler inside the component (place it after formatApiDateTime and before the return)
  const handleExportFloor = (floor, emps) => {
    if (!emps || emps.length === 0) return;

    // build rows: header + data
    const rows = [
      ['Emp ID', 'Name', 'Swipe Time', 'Type', 'Company', 'Direction','Card', 'Door'],
      ...emps.map(r => [
        r.EmployeeID ?? '',
        r.ObjectName1 ?? '',
        formatApiDateTime(r.LocaleMessageTime),
        r.PersonnelType ?? '',
        r.CompanyName ?? '',
        r.Direction ?? '',
        r.CardNumber ?? '',
        r.Door ?? ''
      ])
    ];

    // convert to sheet & workbook
    const ws = XLSX.utils.aoa_to_sheet(rows);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'FloorExport');

    // filename safe floor name + timestamp
    const safeFloor = floor.replace(/[^a-z0-9\-_]/gi, '_').slice(0, 80);
    const ts = new Date().toISOString().slice(0, 19).replace(/[:T]/g, '-');
    const filename = `${partition || 'partition'}_${safeFloor}_${ts}.xlsx`;

    const buf = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });
    saveAs(new Blob([buf]), filename);
  };
