// REPLACE CylinderShape with this
const CylinderShape = (props) => {
  const { x, y, width, height, payload } = props;
  const floorName = payload && payload.floor;
  const idx = chartData.findIndex(d => d.floor === floorName);
  const fill = `url(#cyl-grad-${idx})`;

  const cx = x + width / 2;
  const topRy = Math.max(8, width * 0.12);
  const bottomRy = Math.max(10, width * 0.14);
  const bottomY = y + height;

  // centered label (live/cap) â€” large and bold
  const centerLabel = payload && payload.label ? payload.label : '';

  return (
    <g>
      {/* shadow under the cylinder */}
      <ellipse
        cx={cx}
        cy={bottomY + bottomRy * 0.9}
        rx={width * 0.62}
        ry={bottomRy * 0.45}
        fill="rgba(0,0,0,0.25)"
      />

      {/* cylinder body */}
      <rect
        x={x}
        y={y}
        width={width}
        height={height}
        rx={12}
        ry={12}
        fill={fill}
        stroke="rgba(255,255,255,0.06)"
        strokeWidth={1}
      />

      {/* top ellipse */}
      <ellipse
        cx={cx}
        cy={y}
        rx={width / 2}
        ry={topRy}
        fill={fill}
        stroke="rgba(255,255,255,0.12)"
        strokeWidth={1}
      />

      {/* bottom ellipse for 3D look */}
      <ellipse
        cx={cx}
        cy={bottomY}
        rx={width / 2}
        ry={bottomRy}
        fill="rgba(255,255,255,0.03)"
      />

      {/* big centered count (live/cap) */}
      {centerLabel && (
        <text
          x={cx}
          // vertically center: use middle of cylinder body
          y={y + height / 2 + 8} 
          textAnchor="middle"
          fontSize={Math.max(16, Math.round(width * 0.18))}
          fontWeight="800"
          fill="#ffffff"
        >
          {centerLabel}
        </text>
      )}
    </g>
  );
};