
  // return (
  //   <Box py={4} sx={{ backgroundColor: '#121212', minHeight: '100vh' }}>
  //     {/* Header Section */}
  //     <Box
  //       sx={{
  //         backgroundColor: '#000',
  //         color: '#FFCC00',
  //         textAlign: 'center',

  //         mb: 4,
  //         borderBottom: '4px solid #FFCC00',
  //       }}
  //     >
  //       <Typography variant="h4" py={1}>
  //         Global Security Operation Center Reports
  //       </Typography>
  //     </Box>

  //     {/* Tabs */}
  //     <Tabs
  //       value={tab}
  //       onChange={handleTabChange}
  //       centered
  //       // textColor='#FFF'
  //       indicatorColor="secondary"
  //       sx={{
  //         mb: 3,
  //         '.Mui-selected': { color: '#FFF' },
  //         '.MuiTabs-indicator': { backgroundColor: '#FFCC00' },
  //         borderColor: ' #FFCC00',

  //       }}
  //     >
  //       <Tab label="Daily Access" />
  //       <Tab label="Raw" />
  //       <Tab label="Rejection" />
  //       <Tab label="Time Duration" />
  //       <Tab label="HeadCount" />
  //     </Tabs>

  //     {/* Filter Section */}
  //     <LocalizationProvider dateAdapter={AdapterDateFns}>
  //       <Box display="flex" flexWrap="wrap" gap={2} mb={4} >
  //         {/* Region */}

  //         <FormControl sx={{ minWidth: 250 }}>
  //           <InputLabel>Region</InputLabel>
  //           <Select
  //             value={region}
  //             onChange={e => { setRegion(e.target.value); setLocation(''); }}
  //             input={<OutlinedInput label="Region" sx={{
  //               '& .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border
  //               },
  //               '&:hover .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border on hover
  //               }
  //             }} />}
  //             sx={{
  //               '& .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border
  //               },
  //               '&:hover .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border on hover
  //               }
  //             }}
  //           >
  //             {REGION_OPTIONS.map(r =>
  //               <MenuItem key={r} value={r}>{r.toUpperCase()}</MenuItem>
  //             )}
  //           </Select>
  //         </FormControl>

  //         {/* Location */}
  //         <FormControl sx={{ minWidth: 250 }}>
  //           <InputLabel>Location</InputLabel>
  //           <Select
  //             value={location}
  //             onChange={e => setLocation(e.target.value)}
  //             input={<OutlinedInput label="Location" sx={{
  //               '& .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border
  //               },
  //               '&:hover .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border on hover
  //               }
  //             }} />}
  //             sx={{
  //               '& .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border
  //               },
  //               '&:hover .MuiOutlinedInput-notchedOutline': {
  //                 borderColor: '#FFF' // White border on hover
  //               }
  //             }}
  //             disabled={!region}
  //           >
  //             {(LOCATION_MAP[region] || []).map(loc =>
  //               <MenuItem key={loc} value={loc}>
  //                 {loc.split('.').pop()}
  //               </MenuItem>
  //             )}
  //           </Select>
  //         </FormControl>

  //         {/* From Date */}
  //         {tab !== 4 && (
  //           <Box sx={{ position: 'relative' }}>
  //             <TextField
  //               label={tab === 0 ? 'From Date' : 'Start Date'}
  //               value={from ? from.toLocaleDateString() : ''}
  //               readOnly
  //               onClick={() => setShowFromCal(true)}
  //               sx={{
  //                 '& .MuiOutlinedInput-root': {
  //                   '& fieldset': { borderColor: '#FFF' },
  //                   '&:hover fieldset': { borderColor: '#FFF' }
  //                 }
  //               }}
  //             />
  //             {showFromCal && (
  //               <StaticDatePicker
  //                 displayStaticWrapperAs="desktop"
  //                 value={from}
  //                 onChange={(newValue) => setFrom(newValue)}
  //                 onAccept={() => setShowFromCal(false)}
  //                 onClose={() => setShowFromCal(false)}
  //                 renderInput={(params) => <TextField {...params} />}
  //                 views={['year', 'month', 'day']}
  //               />
  //             )}
  //           </Box>
  //         )}

  //         {/* To Date */}
  //         {tab !== 4 && (
  //           <Box sx={{ position: 'relative' }}>
  //             <TextField
  //               label={tab === 0 ? 'To Date' : 'End Date'}
  //               value={to ? to.toLocaleDateString() : ''}
  //               readOnly
  //               onClick={() => setShowToCal(true)}
  //               sx={{
  //                 '& .MuiOutlinedInput-root': {
  //                   '& fieldset': { borderColor: '#FFF' },
  //                   '&:hover fieldset': { borderColor: '#FFF' }
  //                 }
  //               }}
  //             />
  //             {showToCal && (
  //               <StaticDatePicker
  //                 displayStaticWrapperAs="desktop"
  //                 value={to}
  //                 onChange={(newValue) => setTo(newValue)}
  //                 onAccept={() => setShowToCal(false)}
  //                 onClose={() => setShowToCal(false)}
  //                 renderInput={(params) => <TextField {...params} />}
  //                 views={['year', 'month', 'day']}
  //               />
  //             )}
  //           </Box>
  //         )}



  //         {/* Employees (only Daily) */}
  //         {tab === 0 && (
  //           <FormControl sx={{ minWidth: 250 }}>
  //             <InputLabel>Employees</InputLabel>
  //             <Select
  //               multiple
  //               value={selectedEmps}
  //               onChange={e => setSelectedEmps(e.target.value)}
  //               input={<OutlinedInput label="Employees" sx={{
  //                 '& .MuiOutlinedInput-notchedOutline': {
  //                   borderColor: '#FFF' // White border
  //                 },
  //                 '&:hover .MuiOutlinedInput-notchedOutline': {
  //                   borderColor: '#FFF' // White border on hover
  //                 }
  //               }} />}
  //               sx={{
  //                 '& .MuiOutlinedInput-notchedOutline': {
  //                   borderColor: '#FFF' // White border
  //                 },
  //                 '&:hover .MuiOutlinedInput-notchedOutline': {
  //                   borderColor: '#FFF' // White border on hover
  //                 }
  //               }}
  //               renderValue={vals => vals.join(', ')}
  //             >
  //               {EMPLOYEE_OPTIONS.map(n => (
  //                 <MenuItem key={n} value={n}>
  //                   <Checkbox checked={selectedEmps.includes(n)} />
  //                   <ListItemText primary={n} />
  //                 </MenuItem>
  //               ))}
  //             </Select>
  //           </FormControl>
  //         )}


  //       </Box>
  //     </LocalizationProvider>

  //     {/* Action Button */}



  //     <Box textAlign="center">
  //       {tab === 4 ? (
  //         // HeadCount tab: show "Navigate To" button
  //         <Button
  //           variant="contained"
  //           size="large"
  //           onClick={handleGenerate}
  //           disabled={!region || loading}
  //           startIcon={loading ? <CircularProgress size={20} /> : null}
  //           sx={{
  //             backgroundColor: '#FFCC00',
  //             color: 'black',
  //             fontWeight: 'bold',
  //             px: 4,
  //             '&:hover': {
  //               backgroundColor: '#f4d03f',
  //             },
  //           }}
  //         >
  //           {loading
  //             ? 'Loading…'
  //             : location
  //               ? `Navigate to ${location.split('.').pop()}`
  //               : `Navigate to ${region.toUpperCase()}`}
  //         </Button>
  //       ) : (
  //         // Other tabs: show "Export to Excel" button
  //         <Button
  //           variant="contained"
  //           size="large"
  //           onClick={handleGenerate}
  //           disabled={disabled}
  //           startIcon={loading ? <CircularProgress size={20} /> : null}
  //           sx={{
  //             backgroundColor: '#FFCC00',
  //             color: 'black',
  //             fontWeight: 'bold',
  //             px: 4,
  //             '&:hover': {
  //               backgroundColor: '#f4d03f',
  //             },
  //           }}
  //         >
  //           {loading ? 'Generating…' : 'Export to Excel'}
  //         </Button>
  //       )}
  //     </Box>

  //   </Box>
  // );


  // **************************************


