
// src/components/ERTOverview.jsx
import React, { useState, useEffect } from "react";
import { Card, Badge, Row, Col } from "react-bootstrap";
import { FaEnvelopeOpenText, FaMapMarkerAlt, FaUsers } from "react-icons/fa";
import membersData from "../data/lacaErtMembers.json";
import Header from "../components/Header";
import { lookupFloor } from "../utils/floorLookup";

export default function LacaERTOverview() {
  const [members, setMembers] = useState([]);

  useEffect(() => {
    async function fetchData() {
      try {
        const res = await fetch(
          "http://localhost:3001/api/occupancy/live-summary"
        );
        const liveData = await res.json();

        const liveDetails = Array.isArray(liveData.details)
          ? liveData.details
          : [];

        const merged = membersData["Team Members"].map((m) => {
          const live = liveDetails.find(
            (d) => d.EmployeeID === m.emp_id
          ) || {};

          const inLocation =
            live.PartitionName2 && live.Door
              ? lookupFloor(live.PartitionName2, live.Door, "InDirection")
              : "";
          const outLocation =
            live.PartitionName2 && live.Door
              ? lookupFloor(live.PartitionName2, live.Door, "OutDirection")
              : "";

          return {
            ...m,
            present: !!live.EmployeeID,
            inLocation,
            outLocation,
            door: live.Door || "",
          };
        });

        // âœ… Sort so available members are first
        const sorted = merged.sort((a, b) => (a.present === b.present ? 0 : a.present ? -1 : 1));

        setMembers(sorted);
      } catch (err) {
        console.error("Error fetching live data:", err);
      }
    }

    fetchData();
    const interval = setInterval(fetchData, 15000);
    return () => clearInterval(interval);
  }, []);

  return (
    <>
     <Header />
    
    <Card
      style={{
        backgroundColor: "#1C1C1C",
        color: "#F0F0F0",
        border: "1px solid #333",
        borderRadius: "12px",
      }}
    >
      <Card.Header
        style={{
          borderBottom: "1px solid #333",
          fontWeight: "600",
          display: "flex",
          alignItems: "center",
          gap: "10px",
          backgroundColor: "#111",
          color: "#fff",
          fontSize: "1.2rem",
        }}
      >
        <FaUsers style={{ color: "#1ABC9C" }} />
        Costa Rica ERT Team Members
      </Card.Header>

      <Card.Body style={{ padding: "1.5rem" }}>
        <Row xs={1} md={3} className="g-4">
          {members.map((m, i) => (
            <Col key={i}>
              <div
                style={{
                  backgroundColor: "#2C2C2C",
                  borderRadius: "10px",
                  padding: "1rem",
                  border: "1px solid #444",
                  height: "100%",
                }}
              >
                {/* Name + Status */}
                <div className="d-flex justify-content-between align-items-center">
                  <h5 style={{ fontWeight: "600", marginBottom: "0.5rem" }}>
                    {m.name}{" "}
                    <span style={{ fontSize: "0.8rem", color: "#bbb" }}>
                      ({m.emp_id})
                    </span>
                  </h5>

                  <Badge
                    bg={m.present ? "success" : "danger"}
                    pill
                    style={{ marginBottom: "0.8rem" }}
                  >
                    {m.present ? "Available" : "Away"}
                  </Badge>
                </div>

                {/* Email */}
                <div style={{ fontSize: "0.85rem" }}>
                  <div className="d-flex align-items-center mb-2">
                    <FaEnvelopeOpenText
                      className="me-2"
                      style={{ color: "#3498DB", minWidth: "16px" }}
                    />
                    <a
                      href={`mailto:${m.email}`}
                      style={{ color: "#5DADE2", textDecoration: "none" }}
                    >
                      {m.email}
                    </a>
                  </div>

                  {/* Location Info */}
                  {m.present && (m.inLocation || m.outLocation) && (
                    <div className="mb-2">
                      <div className="d-flex align-items-center">
                        <FaMapMarkerAlt
                          className="me-2"
                          style={{ color: "#E74C3C", minWidth: "16px" }}
                        />
                        <span style={{ color: "#E74C3C" }}>
                          {m.inLocation || "Unknown"}
                        </span>
                      </div>
                      {m.outLocation &&
                        m.outLocation !== m.inLocation && (
                          <div
                            style={{
                              marginLeft: "1.5rem",
                              fontSize: "0.8rem",
                              color: "#aaa",
                            }}
                          >
                            Exit To: {m.outLocation}
                          </div>
                        )}
                    </div>
                  )}
                </div>
              </div>  
            </Col>
          ))}
        </Row>
      </Card.Body>
      
    </Card>
    </>
  );
}



