import React, { useEffect, useState, useMemo, useCallback } from 'react';





const saveHistoryCache = useCallback((backendKey, json) => {
  try {
    const version = json?.meta?.version || json?.generated_at || null;
    const payload = { fetchedAt: Date.now(), version, json };
    localStorage.setItem(cacheKeyFor(backendKey), JSON.stringify(payload));
  } catch (err) {
    console.warn('saveHistoryCache error', err);
  }
}, []);

const loadHistoryCache = useCallback((backendKey) => {
  try {
    const raw = localStorage.getItem(cacheKeyFor(backendKey));
    return raw ? JSON.parse(raw) : null;
  } catch (err) {
    console.warn('loadHistoryCache error', err);
    return null;
  }
}, []);