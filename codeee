Compiled with problems:
×
ERROR in ./src/components/CurrentLocation.jsx 129:0-66
Module not found: Error: Can't resolve 'lucide-react' in 'C:\Users\W0024618\Desktop\employee-verification\frontend\src\components'
ERROR in ./src/components/EmployeeCard.jsx 301:0-74
Module not found: Error: Can't resolve 'lucide-react' in 'C:\Users\W0024618\Desktop\employee-verification\frontend\src\components'

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { MapPin, Clock, DoorClosed, Compass } from 'lucide-react'; // icons

export default function CurrentLocation({ empId }) {
  const [loading, setLoading] = useState(false);
  const [loc, setLoc] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    if (!empId) {
      setLoc(null);
      setError('');
      return;
    }

    let cancelled = false;
    setLoading(true);
    setError('');
    setLoc(null);

    axios.get(`http://localhost:5001/api/employees/${empId}/location`, { timeout: 5000 })
      .then(res => {
        if (cancelled) return;
        setLoc(res.data);
      })
      .catch(() => {
        if (cancelled) return;
        setError('Failed to load location');
      })
      .finally(() => {
        if (!cancelled) setLoading(false);
      });

    return () => {
      cancelled = true;
    };
  }, [empId]);

  if (!empId) return null;

  return (
    <div
      style={{
        background: '#1a1a1a',
        borderRadius: '12px',
        padding: '1rem',
        boxShadow: '0 2px 10px rgba(0,0,0,0.15)',
        color: '#fff',
        marginTop: '1rem',
        fontSize: '14px'
      }}
    >
      <h4 style={{ margin: '0 0 0.5rem 0', fontSize: 16, fontWeight: 600, display: 'flex', alignItems: 'center', gap: '8px' }}>
        <MapPin size={16} /> Swipe Details
      </h4>

      {loading && <div>Loading location…</div>}
      {error && <div style={{ color: '#ff6b6b' }}>{error}</div>}
      {!loading && loc && !loc.found && <div style={{ color: '#2ced0e' }}>No recent swipe</div>}

      {!loading && loc && loc.found && (
        <div style={{ display: 'grid', gap: '6px' }}>
          <div style={{ fontWeight: 600 }}>
            {loc.partition || '—'} {loc.floor ? `· ${loc.floor}` : ''}
          </div>

          {loc.timestampUTC && (() => {
            const istDate = new Date(loc.timestampUTC).toLocaleDateString('en-IN', { timeZone: 'Asia/Kolkata' });
            const istTime = new Date(loc.timestampUTC).toLocaleTimeString('en-IN', { timeZone: 'Asia/Kolkata' });
            return (
              <>
                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
                  <Clock size={14} /> Date: {istDate}
                </div>
                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
                  <Clock size={14} /> Time: {istTime}
                </div>
              </>
            );
          })()}

          {loc.door && (
            <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
              <DoorClosed size={14} /> Door: {loc.door}
            </div>
          )}
          {loc.direction && (
            <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
              <Compass size={14} /> Direction: {loc.direction}
            </div>
          )}
        </div>
      )}
    </div>
  );
}
















import React from 'react';
import CurrentLocation from './CurrentLocation';
import { User, IdCard, Briefcase, UserCheck, Layers } from 'lucide-react';

export default function EmployeeCard({ emp }) {
  if (!emp) return null;

  const rawStatus = emp.Employee_Status || 'Deactive';
  const normalizedStatus = rawStatus.trim().toLowerCase();
  const isTerminated = normalizedStatus === 'terminated';

  return (
    <div
      style={{
        background: '#121212',
        borderRadius: '16px',
        padding: '1.5rem',
        display: 'flex',
        flexWrap: 'wrap',
        gap: '1.5rem',
        alignItems: 'flex-start',
        boxShadow: '0 4px 12px rgba(0,0,0,0.2)',
        color: '#fff',
        maxWidth: '100%',
      }}
    >
      {/* Profile Image */}
      <div style={{ flex: '0 0 280px', textAlign: 'center' }}>
        <div style={{ position: 'relative' }}>
          <img
            src={`http://localhost:5001${emp.imageUrl}`}
            alt={emp.EmpName}
            style={{
              width: '100%',
              height: 'auto',
              borderRadius: '12px',
              border: '3px solid #2a2a2a',
              objectFit: 'cover'
            }}
            onError={(e) => { e.target.onerror = null; e.target.src = '/images/no-photo.jpg'; }}
          />
          <span
            style={{
              position: 'absolute',
              bottom: 8,
              left: '50%',
              transform: 'translateX(-50%)',
              background: normalizedStatus === 'active' ? '#0b9' : '#999',
              color: '#fff',
              padding: '6px 12px',
              borderRadius: '20px',
              fontSize: '12px',
              fontWeight: 600
            }}
          >
            {rawStatus}
          </span>
        </div>
      </div>

      {/* Employee Info */}
      <div style={{ flex: '1', minWidth: '250px' }}>
        <h2 style={{ margin: 0, fontSize: '1.5rem', fontWeight: 700, display: 'flex', alignItems: 'center', gap: '10px' }}>
          <User size={20} /> {emp.EmpName}
        </h2>

        <div style={{ marginTop: '1rem', display: 'grid', gridTemplateColumns: '150px 1fr', gap: '8px 16px' }}>
          <label><IdCard size={14} /> Employee ID</label> <span>{emp.EmployeeID || '—'}</span>
          <label><Briefcase size={14} /> Personnel Type</label> <span>{emp.PersonnelType || '—'}</span>
          <label><UserCheck size={14} /> Manager</label> <span>{emp.Manager_Name || '—'}</span>
          <label>Manager WU ID</label> <span>{emp.Manager_WU_ID || '—'}</span>
          <label>Status</label> <span>{rawStatus}</span>
          <label><Layers size={14} /> Total Cards</label> <span>{emp.Total_Cards ?? 0}</span>
          <label>Active Cards</label> <span>{emp.Active_Cards ?? 0}</span>
        </div>

        {/* Current Location */}
        <CurrentLocation empId={emp.id} />
      </div>
    </div>
  );
}
